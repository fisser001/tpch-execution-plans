-------------------------------------- CREATED PATH IF NOT EXIST ---------------------------------
-------------------------------------- CREATED PATH IF NOT EXIST ---------------------------------
-------------------------------------- drill_normal_query_sf3_result_explain.txt ---------------------------------
-------------------------------------- drill_normal_query_sf3_result_explain.txt ---------------------------------
-------------------------------------- DRILL QUERY NORMALIZED ---------------------------------
-------------------------------------- DRILL QUERY NORMALIZED ---------------------------------
13/04/2019 14:49:16.723

--------------------------------------STARTED QUERY 1. ---------------------------------
13/04/2019 14:49:16.730
Apr 13, 2019 2:49:17 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"A little SQL for your NoSQL."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select  l_returnflag,  l_linestatus,  sum(l_quantity) as sum_qty,  sum(l_extendedprice) as sum_base_price,  sum(l_extendedprice*(1-l_discount)) as sum_disc_price,  sum(l_extendedprice*(1-l_discount)*(1+l_tax)) as sum_charge,  avg(l_quantity) as avg_qty,  avg(l_extendedprice) as avg_price,  avg(l_discount) as avg_disc,  count(*)[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(l_returnflag=[$0], l_linestatus=[$1], sum_qty=[$2], sum_base_price=[$3], sum_disc_price=[$4], sum_charge=[$5], avg_qty=[$6], avg_price=[$7], avg_disc=[$8], count_order=[$9])
00-02        SingleMergeExchange(sort0=[0], sort1=[1])
01-01          OrderedMuxExchange(sort0=[0], sort1=[1])
02-01            SelectionVectorRemover
02-02              Sort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])
02-03                Project(l_returnflag=[$0], l_linestatus=[$1], sum_qty=[CASE(=($3, 0), null, $2)], sum_base_price=[CASE(=($5, 0), null, $4)], sum_disc_price=[CASE(=($7, 0), null, $6)], sum_charge=[CASE(=($9, 0), null, $8)], avg_qty=[divide(CastHigh(CASE(=($3, 0), null, $2)), $3)], avg_price=[divide(CastHigh(CASE(=($5, 0), null, $4)), $5)], avg_disc=[divide(CastHigh(CASE(=($11, 0), null, $10)), $11)], count_order=[$12])
02-04                  HashAgg(group=[{0, 1}], agg#0=[$SUM0($2)], agg#1=[$SUM0($3)], agg#2=[$SUM0($4)], agg#3=[$SUM0($5)], agg#4=[$SUM0($6)], agg#5=[$SUM0($7)], agg#6=[$SUM0($8)], agg#7=[$SUM0($9)], agg#8=[$SUM0($10)], agg#9=[$SUM0($11)], count_order=[$SUM0($12)])
02-05                    HashToRandomExchange(dist0=[[$0]], dist1=[[$1]])
03-01                      HashAgg(group=[{0, 1}], agg#0=[$SUM0($2)], agg#1=[COUNT($2)], agg#2=[$SUM0($3)], agg#3=[COUNT($3)], agg#4=[$SUM0($4)], agg#5=[COUNT($4)], agg#6=[$SUM0($5)], agg#7=[COUNT($5)], agg#8=[$SUM0($6)], agg#9=[COUNT($6)], count_order=[COUNT()])
03-02                        Project(l_returnflag=[$4], l_linestatus=[$5], l_quantity=[$0], l_extendedprice=[$1], $f4=[*($1, -(1, $2))], $f5=[*(*($1, -(1, $2)), +(1, $3))], l_discount=[$2])
03-03                          SelectionVectorRemover
03-04                            Filter(condition=[<=($6, 1998-09-02)])
03-05                              Project(l_quantity=[$0], l_extendedprice=[$1], l_discount=[$2], l_tax=[$3], l_returnflag=[$4], l_linestatus=[$5], l_shipdate=[$6])
03-06                                Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 196614,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_quantity`", "`l_extendedprice`", "`l_discount`", "`l_tax`", "`l_returnflag`", "`l_linestatus`", "`l_shipdate`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 196613,
    "exprs" : [ {
      "ref" : "`l_quantity`",
      "expr" : "`l_quantity`"
    }, {
      "ref" : "`l_extendedprice`",
      "expr" : "`l_extendedprice`"
    }, {
      "ref" : "`l_discount`",
      "expr" : "`l_discount`"
    }, {
      "ref" : "`l_tax`",
      "expr" : "`l_tax`"
    }, {
      "ref" : "`l_returnflag`",
      "expr" : "`l_returnflag`"
    }, {
      "ref" : "`l_linestatus`",
      "expr" : "`l_linestatus`"
    }, {
      "ref" : "`l_shipdate`",
      "expr" : "`l_shipdate`"
    } ],
    "child" : 196614,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "filter",
    "@id" : 196612,
    "child" : 196613,
    "expr" : "less_than_or_equal_to(`l_shipdate`, cast( 904694400000 as DATE)) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 8998304.5
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 196611,
    "child" : 196612,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 8998304.5
  }, {
    "pop" : "project",
    "@id" : 196610,
    "exprs" : [ {
      "ref" : "`l_returnflag`",
      "expr" : "`l_returnflag`"
    }, {
      "ref" : "`l_linestatus`",
      "expr" : "`l_linestatus`"
    }, {
      "ref" : "`l_quantity`",
      "expr" : "`l_quantity`"
    }, {
      "ref" : "`l_extendedprice`",
      "expr" : "`l_extendedprice`"
    }, {
      "ref" : "`$f4`",
      "expr" : "multiply(`l_extendedprice`, subtract(1, `l_discount`) ) "
    }, {
      "ref" : "`$f5`",
      "expr" : "multiply(multiply(`l_extendedprice`, subtract(1, `l_discount`) ) , add(1, `l_tax`) ) "
    }, {
      "ref" : "`l_discount`",
      "expr" : "`l_discount`"
    } ],
    "child" : 196611,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 8998304.5
  }, {
    "pop" : "hash-aggregate",
    "@id" : 196609,
    "child" : 196610,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_1of2",
    "groupByExprs" : [ {
      "ref" : "`l_returnflag`",
      "expr" : "`l_returnflag`"
    }, {
      "ref" : "`l_linestatus`",
      "expr" : "`l_linestatus`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`$f2`",
      "expr" : "$sum0(`l_quantity`) "
    }, {
      "ref" : "`$f3`",
      "expr" : "count(`l_quantity`) "
    }, {
      "ref" : "`$f4`",
      "expr" : "$sum0(`l_extendedprice`) "
    }, {
      "ref" : "`$f5`",
      "expr" : "count(`l_extendedprice`) "
    }, {
      "ref" : "`$f6`",
      "expr" : "$sum0(`$f4`) "
    }, {
      "ref" : "`$f7`",
      "expr" : "count(`$f4`) "
    }, {
      "ref" : "`$f8`",
      "expr" : "$sum0(`$f5`) "
    }, {
      "ref" : "`$f9`",
      "expr" : "count(`$f5`) "
    }, {
      "ref" : "`$f10`",
      "expr" : "$sum0(`l_discount`) "
    }, {
      "ref" : "`$f11`",
      "expr" : "count(`l_discount`) "
    }, {
      "ref" : "`count_order`",
      "expr" : "count(1) "
    } ],
    "cost" : 6748728.375
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 131077,
    "child" : 196609,
    "expr" : "hash32AsDouble(`l_linestatus`, hash32AsDouble(`l_returnflag`, 1301011) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 899830.45
  }, {
    "pop" : "hash-aggregate",
    "@id" : 131076,
    "child" : 131077,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_2of2",
    "groupByExprs" : [ {
      "ref" : "`l_returnflag`",
      "expr" : "`l_returnflag`"
    }, {
      "ref" : "`l_linestatus`",
      "expr" : "`l_linestatus`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`$f2`",
      "expr" : "$sum0(`$f2`) "
    }, {
      "ref" : "`$f3`",
      "expr" : "$sum0(`$f3`) "
    }, {
      "ref" : "`$f4`",
      "expr" : "$sum0(`$f4`) "
    }, {
      "ref" : "`$f5`",
      "expr" : "$sum0(`$f5`) "
    }, {
      "ref" : "`$f6`",
      "expr" : "$sum0(`$f6`) "
    }, {
      "ref" : "`$f7`",
      "expr" : "$sum0(`$f7`) "
    }, {
      "ref" : "`$f8`",
      "expr" : "$sum0(`$f8`) "
    }, {
      "ref" : "`$f9`",
      "expr" : "$sum0(`$f9`) "
    }, {
      "ref" : "`$f10`",
      "expr" : "$sum0(`$f10`) "
    }, {
      "ref" : "`$f11`",
      "expr" : "$sum0(`$f11`) "
    }, {
      "ref" : "`count_order`",
      "expr" : "$sum0(`count_order`) "
    } ],
    "cost" : 674872.8374999999
  }, {
    "pop" : "project",
    "@id" : 131075,
    "exprs" : [ {
      "ref" : "`l_returnflag`",
      "expr" : "`l_returnflag`"
    }, {
      "ref" : "`l_linestatus`",
      "expr" : "`l_linestatus`"
    }, {
      "ref" : "`sum_qty`",
      "expr" : " ( if (equal(`$f3`, 0)  ) then (NULL )  else (`$f2` )  end  ) "
    }, {
      "ref" : "`sum_base_price`",
      "expr" : " ( if (equal(`$f5`, 0)  ) then (NULL )  else (`$f4` )  end  ) "
    }, {
      "ref" : "`sum_disc_price`",
      "expr" : " ( if (equal(`$f7`, 0)  ) then (NULL )  else (`$f6` )  end  ) "
    }, {
      "ref" : "`sum_charge`",
      "expr" : " ( if (equal(`$f9`, 0)  ) then (NULL )  else (`$f8` )  end  ) "
    }, {
      "ref" : "`avg_qty`",
      "expr" : "divide(casthigh( ( if (equal(`$f3`, 0)  ) then (NULL )  else (`$f2` )  end  ) ) , `$f3`) "
    }, {
      "ref" : "`avg_price`",
      "expr" : "divide(casthigh( ( if (equal(`$f5`, 0)  ) then (NULL )  else (`$f4` )  e[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (0.467 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:49:20.558
--------------------------------------Finished QUERY 1.--------------------------------

--------------------------------------STARTED QUERY 2. ---------------------------------
13/04/2019 14:49:20.568
Apr 13, 2019 2:49:21 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Just Drill It."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from hive.p_part_parquet, hive.s_supplier_parquet, hive.ps_partsupp_parquet, hive.n_nation_parquet, hive.r_region_parquet where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 15 and p_type like '%BRASS' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' and ps_supplycost = (select min(ps_supplycost) from hive.ps_partsupp_parquet, hive.s_supplier_parquet, hive.n_nation_parquet, hive.r_region_parquet where p_partkey = ps_partkey and s_suppkey = ps_suppkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(s_acctbal=[$0], s_name=[$1], n_name=[$2], p_partkey=[$3], p_mfgr=[$4], s_address=[$5], s_phone=[$6], s_comment=[$7])
00-02        SelectionVectorRemover
00-03          Limit(fetch=[100])
00-04            SingleMergeExchange(sort0=[0 DESC], sort1=[2], sort2=[1], sort3=[3])
01-01              OrderedMuxExchange(sort0=[0 DESC], sort1=[2], sort2=[1], sort3=[3])
02-01                SelectionVectorRemover
02-02                  Limit(fetch=[100])
02-03                    SelectionVectorRemover
02-04                      TopN(limit=[100])
02-05                        HashToRandomExchange(dist0=[[$0]], dist1=[[$2]], dist2=[[$1]], dist3=[[$3]])
03-01                          Project(s_acctbal=[$5], s_name=[$2], n_name=[$8], p_partkey=[$0], p_mfgr=[$1], s_address=[$3], s_phone=[$4], s_comment=[$6])
03-02                            HashJoin(condition=[AND(=($0, $9), =($7, $10))], joinType=[inner], semi-join: =[false])
03-04                              Project(p_partkey=[$0], p_mfgr=[$1], s_name=[$2], s_address=[$3], s_phone=[$4], s_acctbal=[$5], s_comment=[$6], ps_supplycost=[$7], n_name=[$8])
03-05                                HashJoin(condition=[=($9, $10)], joinType=[inner], semi-join: =[false])
03-07                                  Project(p_partkey=[$0], p_mfgr=[$1], s_name=[$2], s_address=[$3], s_phone=[$5], s_acctbal=[$6], s_comment=[$7], ps_supplycost=[$8], n_name=[$10], n_regionkey=[$11])
03-08                                    HashJoin(condition=[=($4, $9)], joinType=[inner], semi-join: =[false])
03-10                                      Project(p_partkey=[$0], p_mfgr=[$1], s_name=[$3], s_address=[$4], s_nationkey=[$5], s_phone=[$6], s_acctbal=[$7], s_comment=[$8], ps_supplycost=[$11])
03-11                                        Project(p_partkey=[$3], p_mfgr=[$4], s_suppkey=[$5], s_name=[$6], s_address=[$7], s_nationkey=[$8], s_phone=[$9], s_acctbal=[$10], s_comment=[$11], ps_partkey=[$0], ps_suppkey=[$1], ps_supplycost=[$2])
03-12                                          HashJoin(condition=[=($5, $1)], joinType=[inner], semi-join: =[false])
03-14                                            HashJoin(condition=[=($3, $0)], joinType=[inner], semi-join: =[false])
03-16                                              Project(ps_partkey=[$0], ps_suppkey=[$1], ps_supplycost=[$2])
03-17                                                Scan(table=[[hive, ps_partsupp_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000001_0]], numFiles=3, numRowGroups=3, columns=[`ps_partkey`, `ps_suppkey`, `ps_supplycost`]]])
03-15                                              BroadcastExchange
04-01                                                Project(p_partkey=[$0], p_mfgr=[$1])
04-02                                                  SelectionVectorRemover
04-03                                                    Filter(condition=[AND(=($3, 15), LIKE($2, '%BRASS'))])
04-04                                                      Project(p_partkey=[$0], p_mfgr=[$1], p_type=[$2], p_size=[$3])
04-05                                                        Scan(table=[[hive, p_part_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/p_part_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`p_partkey`, `p_mfgr`, `p_type`, `p_size`]]])
03-13                                            BroadcastExchange
05-01                                              Project(s_suppkey=[$0], s_name=[$1], s_address=[$2], s_nationkey=[$3], s_phone=[$4], s_acctbal=[$5], s_comment=[$6])
05-02                                                Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_name`, `s_address`, `s_nationkey`, `s_phone`, `s_acctbal`, `s_comment`]]])
03-09                                      BroadcastExchange
06-01                                        Project(n_nationkey=[$0], n_name=[$1], n_regionkey=[$2])
06-02                                          Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`, `n_regionkey`]]])
03-06                                  BroadcastExchange
07-01                                    Project(r_regionkey=[$0])
07-02                                      SelectionVectorRemover
07-03                                        Filter(condition=[=($1, 'EUROPE')])
07-04                                          Project(r_regionkey=[$0], r_name=[$1])
07-05                                            Scan(table=[[hive, r_region_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/r_region_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`r_regionkey`, `r_name`]]])
03-03                              BroadcastExchange
08-01                                HashAgg(group=[{0}], EXPR$0=[MIN($1)])
08-02                                  HashToRandomExchange(dist0=[[$0]])
09-01                                    HashAgg(group=[{0}], EXPR$0=[MIN($1)])
09-02                                      Project(ps_partkey=[$0], ps_supplycost=[$1])
09-03                                        HashJoin(condition=[=($2, $3)], joinType=[inner], semi-join: =[false])
09-05                                          Project(ps_partkey=[$0], ps_supplycost=[$1], n_regionkey=[$4])
09-06                                            HashJoin(condition=[=($2, $3)], joinType=[inner], semi-join: =[false])
09-08                                              Project(ps_partkey=[$0], ps_supplycost=[$2], s_nationkey=[$4])
09-09                                                HashJoin(condition=[=($1, $3)], joinType=[inner], semi-join: =[false])
09-11                                                  SelectionVectorRemover
09-12                                                    Filter(condition=[IS NOT NULL($0)])
09-13                                                      Project(ps_partkey=[$0], ps_suppkey=[$1], ps_supplycost=[$2])
09-14                                                        Scan(table=[[hive, ps_partsupp_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000001_0]], numFiles=3, numRowGroups=3, columns=[`ps_partkey`, `ps_suppkey`, `ps_supplycost`]]])
09-10                                                  BroadcastExchange
10-01                                                    Project(s_suppkey=[$0], s_nationkey=[$1])
10-02                                                      Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_nationkey`]]])
09-07                                              BroadcastExchange
11-01                                                Project(n_nationkey=[$0], n_regionkey=[$1])
11-02                                                  Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_regionkey`]]])
09-04                                          BroadcastExchange
12-01                                            Project(r_regionkey=[$0])
12-02                                              SelectionVectorRemover
12-03                                                Filter(condition=[=($1, 'EUROPE')])
12-04                                                  Project(r_regionkey=[$0], r_name=[$1])
12-05                                                    Scan(table=[[hive, r_region_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/r_region_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`r_regionkey`, `r_name`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262149,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`p_partkey`", "`p_mfgr`", "`p_type`", "`p_size`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/p_part_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 600000.0
  }, {
    "pop" : "project",
    "@id" : 262148,
    "exprs" : [ {
      "ref" : "`p_partkey`",
      "expr" : "`p_partkey`"
    }, {
      "ref" : "`p_mfgr`",
      "expr" : "`p_mfgr`"
    }, {
      "ref" : "`p_type`",
      "expr" : "`p_type`"
    }, {
      "ref" : "`p_size`",
      "expr" : "`p_size`"
    } ],
    "child" : 262149,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 600000.0
  }, {
    "pop" : "filter",
    [1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (2.09 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:49:25.927
--------------------------------------Finished QUERY 2.--------------------------------

--------------------------------------STARTED QUERY 3. ---------------------------------
13/04/2019 14:49:25.937
Apr 13, 2019 2:49:26 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Data is the new oil. Ready to Drill some?"
0: jdbc:drill:zk=zookeeper:2181> explain plan for select l_orderkey, sum(l_extendedprice*(1-l_discount))[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(l_orderkey=[$0], revenue=[$1], o_orderdate=[$2], o_shippriority=[$3])
00-02        SelectionVectorRemover
00-03          Limit(fetch=[10])
00-04            Limit(fetch=[10])
00-05              SelectionVectorRemover
00-06                TopN(limit=[10])
00-07                  Project(l_orderkey=[$0], revenue=[$1], o_orderdate=[$2], o_shippriority=[$3])
00-08                    HashToRandomExchange(dist0=[[$1]], dist1=[[$2]])
01-01                      UnorderedMuxExchange
02-01                        Project(l_orderkey=[$0], revenue=[$1], o_orderdate=[$2], o_shippriority=[$3], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($2, hash32AsDouble($1, 1301011))])
02-02                          Project(l_orderkey=[$0], revenue=[$3], o_orderdate=[$1], o_shippriority=[$2])
02-03                            HashAgg(group=[{0, 1, 2}], revenue=[SUM($3)])
02-04                              Project(l_orderkey=[$0], o_orderdate=[$1], o_shippriority=[$2], revenue=[$3])
02-05                                HashToRandomExchange(dist0=[[$0]], dist1=[[$1]], dist2=[[$2]])
03-01                                  UnorderedMuxExchange
04-01                                    Project(l_orderkey=[$0], o_orderdate=[$1], o_shippriority=[$2], revenue=[$3], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($2, hash32AsDouble($1, hash32AsDouble($0, 1301011)))])
04-02                                      HashAgg(group=[{0, 1, 2}], revenue=[SUM($3)])
04-03                                        Project(l_orderkey=[$6], o_orderdate=[$4], o_shippriority=[$5], $f3=[*($7, -(1, $8))])
04-04                                          Project(c_custkey=[$8], c_mktsegment=[$9], o_orderkey=[$4], o_custkey=[$5], o_orderdate=[$6], o_shippriority=[$7], l_orderkey=[$0], l_extendedprice=[$1], l_discount=[$2], l_shipdate=[$3])
04-05                                            HashJoin(condition=[=($4, $0)], joinType=[inner], semi-join: =[false])
04-07                                              SelectionVectorRemover
04-08                                                Filter(condition=[>($3, 1995-03-15)])
04-09                                                  Project(l_orderkey=[$0], l_extendedprice=[$1], l_discount=[$2], l_shipdate=[$3])
04-10                                                    Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_extendedprice`, `l_discount`, `l_shipdate`]]])
04-06                                              BroadcastExchange
05-01                                                HashJoin(condition=[=($4, $1)], joinType=[inner], semi-join: =[false])
05-03                                                  SelectionVectorRemover
05-04                                                    Filter(condition=[<($2, 1995-03-15)])
05-05                                                      Project(o_orderkey=[$0], o_custkey=[$1], o_orderdate=[$2], o_shippriority=[$3])
05-06                                                        Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_custkey`, `o_orderdate`, `o_shippriority`]]])
05-02                                                  BroadcastExchange
06-01                                                    SelectionVectorRemover
06-02                                                      Filter(condition=[=($1, 'BUILDING')])
06-03                                                        Project(c_custkey=[$0], c_mktsegment=[$1])
06-04                                                          Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_custkey`, `c_mktsegment`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262154,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_orderkey`", "`l_extendedprice`", "`l_discount`", "`l_shipdate`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 262153,
    "exprs" : [ {
      "ref" : "`l_orderkey`",
      "expr" : "`l_orderkey`"
    }, {
      "ref" : "`l_extendedprice`",
      "expr" : "`l_extendedprice`"
    }, {
      "ref" : "`l_discount`",
      "expr" : "`l_discount`"
    }, {
      "ref" : "`l_shipdate`",
      "expr" : "`l_shipdate`"
    } ],
    "child" : 262154,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "filter",
    "@id" : 262152,
    "child" : 262153,
    "expr" : "greater_than(`l_shipdate`, cast( 795225600000 as DATE)) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 8998304.5
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 262151,
    "child" : 262152,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 8998304.5
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393220,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`c_custkey`", "`c_mktsegment`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/c_customer_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 393219,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    }, {
      "ref" : "`c_mktsegment`",
      "expr" : "`c_mktsegment`"
    } ],
    "child" : 393220,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "filter",
    "@id" : 393218,
    "child" : 393219,
    "expr" : "equal(`c_mktsegment`, 'BUILDING') ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 67500.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 393217,
    "child" : 393218,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 67500.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 327682,
    "child" : 393217,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 67500.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 327686,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`o_orderkey`", "`o_custkey`", "`o_orderdate`", "`o_shippriority`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/o_orders_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/o_orders_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1500000.0
  }, {
    "pop" : "project",
    "@id" : 327685,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_custkey`",
      "expr" : "`o_custkey`"
    }, {
      "ref" : "`o_orderdate`",
      "expr" : "`o_orderdate`"
    }, {
      "ref" : "`o_shippriority`",
      "expr" : "`o_shippriority`"
    } ],
    "child" : 327686,
    "outputProj" : false,
    "initi[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (1.007 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:49:30.174
--------------------------------------Finished QUERY 3.--------------------------------

--------------------------------------STARTED QUERY 4. ---------------------------------
13/04/2019 14:49:30.184
Apr 13, 2019 2:49:30 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"JSON ain't no thang."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select o_orderpriority, count(*) as order_count from hive.o_orders_parquet where o_orderdate >= date '1993-07-01' and o_orderdate < date '1993-07-01' + interval '3' month and exists ( select * from hive.l_lineitem_parquet where l_orderkey = o_orderkey and l_commitdate < l_receiptdate )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(o_orderpriority=[$0], order_count=[$1])
00-02        SingleMergeExchange(sort0=[0])
01-01          OrderedMuxExchange(sort0=[0])
02-01            SelectionVectorRemover
02-02              Sort(sort0=[$0], dir0=[ASC])
02-03                HashAgg(group=[{0}], order_count=[$SUM0($1)])
02-04                  HashToRandomExchange(dist0=[[$0]])
03-01                    HashAgg(group=[{0}], order_count=[COUNT()])
03-02                      Project(o_orderpriority=[$1])
03-03                        HashJoin(condition=[=($0, $2)], joinType=[inner], semi-join: =[true])
03-05                          HashToRandomExchange(dist0=[[$0]])
04-01                            Project(o_orderkey=[$0], o_orderpriority=[$2])
04-02                              SelectionVectorRemover
04-03                                Filter(condition=[AND(>=($1, 1993-07-01), <($1, 1993-10-01 00:00:00))])
04-04                                  Project(o_orderkey=[$0], o_orderdate=[$1], o_orderpriority=[$2])
04-05                                    Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_orderdate`, `o_orderpriority`]]])
03-04                          HashToRandomExchange(dist0=[[$0]])
05-01                            Project(l_orderkey=[$0], i=[true])
05-02                              SelectionVectorRemover
05-03                                Filter(condition=[AND(=($0, $0), <($1, $2))])
05-04                                  Project(l_orderkey=[$0], l_commitdate=[$1], l_receiptdate=[$2])
05-05                                    Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_commitdate`, `l_receiptdate`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262149,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`o_orderkey`", "`o_orderdate`", "`o_orderpriority`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/o_orders_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/o_orders_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1500000.0
  }, {
    "pop" : "project",
    "@id" : 262148,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_orderdate`",
      "expr" : "`o_orderdate`"
    }, {
      "ref" : "`o_orderpriority`",
      "expr" : "`o_orderpriority`"
    } ],
    "child" : 262149,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "filter",
    "@id" : 262147,
    "child" : 262148,
    "expr" : "booleanAnd(greater_than_or_equal_to(`o_orderdate`, cast( 741484800000 as DATE)) , less_than(`o_orderdate`, cast( 749433600000 as TIMESTAMP)) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 262146,
    "child" : 262147,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "project",
    "@id" : 262145,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_orderpriority`",
      "expr" : "`o_orderpriority`"
    } ],
    "child" : 262146,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 196613,
    "child" : 262145,
    "expr" : "hash32AsDouble(`o_orderkey`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 327685,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_orderkey`", "`l_commitdate`", "`l_receiptdate`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 327684,
    "exprs" : [ {
      "ref" : "`l_orderkey`",
      "expr" : "`l_orderkey`"
    }, {
      "ref" : "`l_commitdate`",
      "expr" : "`l_commitdate`"
    }, {
      "ref" : "`l_receiptdate`",
      "expr" : "`l_receiptdate`"
    } ],
    "child" : 327685,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "filter",
    "@id" : 327683,
    "child" : 327684,
    "expr" : "booleanAnd(equal(`l_orderkey`, `l_orderkey`) , less_than(`l_commitdate`, `l_receiptdate`) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1349745.675
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 327682,
    "child" : 327683,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1349745.675
  }, {
    "pop" : "project",
    "@id" : 327681,
    "exprs" : [ {
      "ref" : "`l_orderkey`",
      "expr" : "`l_orderkey`"
    }, {
      "ref" : "`i`",
      "expr" : "true"
    } ],
    "child" : 327682,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1349745.675
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 196612,
    "child" : 327681,
    "expr" : "hash32AsDouble(`l_orderkey`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1349745.675
  }, {
    "pop" : "hash-join",
    "@id" : 196611,
    "left" : 196613,
    "right" : 196612,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`o_orderkey`",
      "right" : "`l_orderkey`"
    } ],
    "joinType" : "INNER",
    "semiJoin" : true,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1349745.675
  }, {
    "pop" : "project",
    "@id" : 196610,
    "exprs" : [ {
      "ref" : "`o_orderpriority`",
      "expr" : "`o_orderpriority`"
    } ],
    "child" : 196611,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1349745.675
  }, {
    "pop" : "hash-aggregate",
    "@id" : 196609,
    "child" : 196610,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_1of2",
    "groupByExprs" : [ {
      "ref" : "`o_orderpriority`",
      "expr" : "`o_orderpriority`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`order_count`",
      "expr" : "count(1) "
    } ],
    "cost" : 674872.8375
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 131076,
    "child" : 196609,
    "expr" : "hash32AsDouble(`o_orderpriority`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 134974.5675
  }, {
    "pop" : "hash-aggregate",
    "@id" : 131075,
    "child" : 131076,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_2of2",
    "groupByExprs" : [ {
      "ref" : "`o_orderpriority`",
      "expr" : "`o_orderpriority`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`order_count`",
      "expr" : "$sum0(`order_count`) "
    } ],
    "cost" : 67487.28375
  }, {
    "pop" : "external-sort",
    "@id" : 131074,
    "child" : 131075,
    "orderings" : [ {
      "order" : "ASC",
      "expr" : "`o_orderpriority`",
      "nullDirection" : "LAST"
    } ],
    "reverse" : false,
    "i[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (0.628 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:49:34.113
--------------------------------------Finished QUERY 4.--------------------------------

--------------------------------------STARTED QUERY 5. ---------------------------------
13/04/2019 14:49:34.123
Apr 13, 2019 2:49:34 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"A Drill is a terrible thing to waste."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select n_name, sum(l_extendedprice * (1 - l_discount))[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(n_name=[$0], revenue=[$1])
00-02        SingleMergeExchange(sort0=[1 DESC])
01-01          OrderedMuxExchange(sort0=[1 DESC])
02-01            SelectionVectorRemover
02-02              Sort(sort0=[$1], dir0=[DESC])
02-03                HashToRandomExchange(dist0=[[$1]])
03-01                  HashAgg(group=[{0}], revenue=[SUM($1)])
03-02                    HashToRandomExchange(dist0=[[$0]])
04-01                      HashAgg(group=[{0}], revenue=[SUM($1)])
04-02                        Project(n_name=[$12], $f1=[*($7, -(1, $8))])
04-03                          Project(c_custkey=[$4], c_nationkey=[$5], o_orderkey=[$6], o_custkey=[$7], o_orderdate=[$8], l_orderkey=[$0], l_suppkey=[$1], l_extendedprice=[$2], l_discount=[$3], s_suppkey=[$9], s_nationkey=[$10], n_nationkey=[$11], n_name=[$12], n_regionkey=[$13], r_regionkey=[$14], r_name=[$15])
04-04                            HashJoin(condition=[AND(=($1, $9), =($5, $10))], joinType=[inner], semi-join: =[false])
04-06                              HashJoin(condition=[=($6, $0)], joinType=[inner], semi-join: =[false])
04-08                                Project(l_orderkey=[$0], l_suppkey=[$1], l_extendedprice=[$2], l_discount=[$3])
04-09                                  Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_suppkey`, `l_extendedprice`, `l_discount`]]])
04-07                                BroadcastExchange
05-01                                  HashJoin(condition=[=($0, $3)], joinType=[inner], semi-join: =[false])
05-03                                    HashToRandomExchange(dist0=[[$0]])
07-01                                      Project(c_custkey=[$0], c_nationkey=[$1])
07-02                                        Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_custkey`, `c_nationkey`]]])
05-02                                    HashToRandomExchange(dist0=[[$1]])
08-01                                      Filter(condition=[AND(>=($2, 1994-01-01), <($2, 1995-01-01 00:00:00))])
08-02                                        Project(o_orderkey=[$0], o_custkey=[$1], o_orderdate=[$2])
08-03                                          Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_custkey`, `o_orderdate`]]])
04-05                              BroadcastExchange
06-01                                HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
06-03                                  Project(s_suppkey=[$0], s_nationkey=[$1])
06-06                                    Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_nationkey`]]])
06-02                                  HashJoin(condition=[=($2, $3)], joinType=[inner], semi-join: =[false])
06-05                                    Project(n_nationkey=[$0], n_name=[$1], n_regionkey=[$2])
06-08                                      Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`, `n_regionkey`]]])
06-04                                    SelectionVectorRemover
06-07                                      Filter(condition=[=($1, 'ASIA')])
06-09                                        Project(r_regionkey=[$0], r_name=[$1])
06-10                                          Scan(table=[[hive, r_region_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/r_region_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`r_regionkey`, `r_name`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 524291,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`o_orderkey`", "`o_custkey`", "`o_orderdate`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/o_orders_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/o_orders_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1500000.0
  }, {
    "pop" : "project",
    "@id" : 524290,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_custkey`",
      "expr" : "`o_custkey`"
    }, {
      "ref" : "`o_orderdate`",
      "expr" : "`o_orderdate`"
    } ],
    "child" : 524291,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "filter",
    "@id" : 524289,
    "child" : 524290,
    "expr" : "booleanAnd(greater_than_or_equal_to(`o_orderdate`, cast( 757382400000 as DATE)) , less_than(`o_orderdate`, cast( 788918400000 as TIMESTAMP)) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 327682,
    "child" : 524289,
    "expr" : "hash32AsDouble(`o_custkey`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393222,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`s_suppkey`", "`s_nationkey`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/s_supplier_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 30000.0
  }, {
    "pop" : "project",
    "@id" : 393219,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`s_nationkey`",
      "expr" : "`s_nationkey`"
    } ],
    "child" : 393222,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393226,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`r_regionkey`", "`r_name`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/r_region_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 15.0
  }, {
    "pop" : "project",
    "@id" : 393225,
    "exprs" : [ {
      "ref" : "`r_regionkey`",
      "expr" : "`r_regionkey`"
    }, {
      "ref" : "`r_name`",
      "expr" : "`r_name`"
    } ],
    "child" : 393226,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 15.0
  }, {
    "pop" : "filter",
    "@id" : 393223,
    "child" : 393225,
    "expr" : "equal(`r_name`, 'ASIA') ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 2.25
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 393220,
    "child" : 393223,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 2.25
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262153,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_orderkey`", "`l_suppkey`", "`l_extendedprice`", "`l_discount`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
  [1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (2.436 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:49:39.821
--------------------------------------Finished QUERY 5.--------------------------------

--------------------------------------STARTED QUERY 6. ---------------------------------
13/04/2019 14:49:39.832
Apr 13, 2019 2:49:40 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Drill never goes out of style."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select sum(l_extendedprice*l_discount)[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(revenue=[$0])
00-02        StreamAgg(group=[{}], revenue=[SUM($0)])
00-03          UnionExchange
01-01            StreamAgg(group=[{}], revenue=[SUM($0)])
01-02              Project($f0=[*($1, $2)])
01-03                SelectionVectorRemover
01-04                  Filter(condition=[AND(>=($3, 1994-01-01), <($3, 1995-01-01 00:00:00), >=($2, 0.05), <=($2, 0.07), <($0, 24))])
01-05                    Project(l_quantity=[$0], l_extendedprice=[$1], l_discount=[$2], l_shipdate=[$3])
01-06                      Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_quantity`, `l_extendedprice`, `l_discount`, `l_shipdate`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 65542,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_quantity`", "`l_extendedprice`", "`l_discount`", "`l_shipdate`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 65541,
    "exprs" : [ {
      "ref" : "`l_quantity`",
      "expr" : "`l_quantity`"
    }, {
      "ref" : "`l_extendedprice`",
      "expr" : "`l_extendedprice`"
    }, {
      "ref" : "`l_discount`",
      "expr" : "`l_discount`"
    }, {
      "ref" : "`l_shipdate`",
      "expr" : "`l_shipdate`"
    } ],
    "child" : 65542,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "filter",
    "@id" : 65540,
    "child" : 65541,
    "expr" : "booleanAnd(greater_than_or_equal_to(`l_shipdate`, cast( 757382400000 as DATE)) , less_than(`l_shipdate`, cast( 788918400000 as TIMESTAMP)) , greater_than_or_equal_to(`l_discount`, 0.05) , less_than_or_equal_to(`l_discount`, 0.07) , less_than(`l_quantity`, 24) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 562394.03125
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 65539,
    "child" : 65540,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 562394.03125
  }, {
    "pop" : "project",
    "@id" : 65538,
    "exprs" : [ {
      "ref" : "`$f0`",
      "expr" : "multiply(`l_extendedprice`, `l_discount`) "
    } ],
    "child" : 65539,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 562394.03125
  }, {
    "pop" : "streaming-aggregate",
    "@id" : 65537,
    "child" : 65538,
    "keys" : [ ],
    "exprs" : [ {
      "ref" : "`revenue`",
      "expr" : "sum(`$f0`) "
    } ],
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "union-exchange",
    "@id" : 3,
    "child" : 65537,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "streaming-aggregate",
    "@id" : 2,
    "child" : 3,
    "keys" : [ ],
    "exprs" : [ {
      "ref" : "`revenue`",
      "expr" : "sum(`revenue`) "
    } ],
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "project",
    "@id" : 1,
    "exprs" : [ {
      "ref" : "`revenue`",
      "expr" : "`revenue`"
    } ],
    "child" : 2,
    "outputProj" : true,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "screen",
    "@id" : 0,
    "child" : 1,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  } ]
}[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (0.403 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:49:43.577
--------------------------------------Finished QUERY 6.--------------------------------

--------------------------------------STARTED QUERY 7. ---------------------------------
13/04/2019 14:49:43.587
Apr 13, 2019 2:49:44 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"JSON ain't no thang."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select supp_nation, cust_nation, l_year, sum(volume) as revenue from ( select n1.n_name as supp_nation, n2.n_name as cust_nation, extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from hive.s_supplier_parquet, hive.l_lineitem_parquet, hive.o_orders_parquet, hive.c_customer_parquet, hive.n_nation_parquet n1, hive.n_nation_parquet n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ( (n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY') or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE') ) and l_shipdate between date '1995-01-01' and date '1996-12-31' )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(supp_nation=[$0], cust_nation=[$1], l_year=[$2], revenue=[$3])
00-02        SingleMergeExchange(sort0=[0], sort1=[1], sort2=[2])
01-01          OrderedMuxExchange(sort0=[0], sort1=[1], sort2=[2])
02-01            SelectionVectorRemover
02-02              Sort(sort0=[$0], sort1=[$1], sort2=[$2], dir0=[ASC], dir1=[ASC], dir2=[ASC])
02-03                HashAgg(group=[{0, 1, 2}], revenue=[SUM($3)])
02-04                  HashToRandomExchange(dist0=[[$0]], dist1=[[$1]], dist2=[[$2]])
03-01                    HashAgg(group=[{0, 1, 2}], revenue=[SUM($3)])
03-02                      Project(supp_nation=[$12], cust_nation=[$14], l_year=[EXTRACT(FLAG(YEAR), $6)], volume=[*($4, -(1, $5))])
03-03                        SelectionVectorRemover
03-04                          Filter(condition=[OR(AND(=($12, 'FRANCE'), =($14, 'GERMANY')), AND(=($12, 'GERMANY'), =($14, 'FRANCE')))])
03-05                            Project(s_suppkey=[$5], s_nationkey=[$6], l_orderkey=[$0], l_suppkey=[$1], l_extendedprice=[$2], l_discount=[$3], l_shipdate=[$4], o_orderkey=[$9], o_custkey=[$10], c_custkey=[$11], c_nationkey=[$12], n_nationkey=[$7], n_name=[$8], n_nationkey0=[$13], n_name0=[$14])
03-06                              HashJoin(condition=[=($0, $9)], joinType=[inner], semi-join: =[false])
03-08                                HashJoin(condition=[=($5, $1)], joinType=[inner], semi-join: =[false])
03-11                                  SelectionVectorRemover
03-12                                    Filter(condition=[AND(>=($4, 1995-01-01), <=($4, 1996-12-31))])
03-13                                      Project(l_orderkey=[$0], l_suppkey=[$1], l_extendedprice=[$2], l_discount=[$3], l_shipdate=[$4])
03-14                                        Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_suppkey`, `l_extendedprice`, `l_discount`, `l_shipdate`]]])
03-10                                  BroadcastExchange
04-01                                    HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
04-03                                      Project(s_suppkey=[$0], s_nationkey=[$1])
04-05                                        Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_nationkey`]]])
04-02                                      Project(n_nationkey=[$0], n_name=[$1])
04-04                                        Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`]]])
03-07                                Project(o_orderkey=[$0], o_custkey=[$1], c_custkey=[$2], c_nationkey=[$3], n_nationkey0=[$4], n_name0=[$5])
03-09                                  BroadcastExchange
05-01                                    HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
05-03                                      HashToRandomExchange(dist0=[[$1]])
06-01                                        Project(o_orderkey=[$0], o_custkey=[$1])
06-02                                          Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_custkey`]]])
05-02                                      HashToRandomExchange(dist0=[[$0]])
07-01                                        HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
07-03                                          Project(c_custkey=[$0], c_nationkey=[$1])
07-05                                            Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_custkey`, `c_nationkey`]]])
07-02                                          Project(n_nationkey=[$0], n_name=[$1])
07-04                                            Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262148,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`n_nationkey`", "`n_name`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/n_nation_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 25.0
  }, {
    "pop" : "project",
    "@id" : 262146,
    "exprs" : [ {
      "ref" : "`n_nationkey`",
      "expr" : "`n_nationkey`"
    }, {
      "ref" : "`n_name`",
      "expr" : "`n_name`"
    } ],
    "child" : 262148,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 25.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262149,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`s_suppkey`", "`s_nationkey`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/s_supplier_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 30000.0
  }, {
    "pop" : "project",
    "@id" : 262147,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`s_nationkey`",
      "expr" : "`s_nationkey`"
    } ],
    "child" : 262149,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "hash-join",
    "@id" : 262145,
    "left" : 262147,
    "right" : 262146,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`s_nationkey`",
      "right" : "`n_nationkey`"
    } ],
    "joinType" : "INNER",
    "semiJoin" : false,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 196618,
    "child" : 262145,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 458756,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`n_nationkey`", "`n_name`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/n_nation_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 25.0
  }, {
    "pop" : "project",
    "@id" : 458754,
    "exprs" : [ {
      "ref" : "`n_nationkey`",
      "expr" : "`n_nationkey`"
    }, {
      "ref" : "`n_name`",
      "expr" : "`n_name`"
    } ],
    "child" : 458756,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 25.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393218,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`o_orderkey`", "`o_custkey`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/o_orders_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/o_orders_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1500000.0
  }, {
    "pop" : "project",
    "@id" : 393217,
    "exprs" : [ {
      "ref" : "`o_[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (1.802 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:49:48.865
--------------------------------------Finished QUERY 7.--------------------------------

--------------------------------------STARTED QUERY 8. ---------------------------------
13/04/2019 14:49:48.876
Apr 13, 2019 2:49:49 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"A query result is never late, nor is it early, it arrives precisely when it means to."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select o_year, sum(case when nation = 'BRAZIL' then volume else 0 end) / sum(volume) as mkt_share from ( select extract(year from o_orderdate) as o_year, l_extendedprice * (1-l_discount) as volume, n2.n_name as nation from hive.p_part_parquet, hive.s_supplier_parquet, hive.l_lineitem_parquet, hive.o_orders_parquet, hive.c_customer_parquet, hive.n_nation_parquet n1, hive.n_nation_parquet n2, hive.r_region_parquet where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = 'AMERICA' and s_nationkey = n2.n_nationkey and o_orderdate between date '1995-01-01' and date '1996-12-31' and p_type = 'ECONOMY ANODIZED STEEL' )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(o_year=[$0], mkt_share=[$1])
00-02        SingleMergeExchange(sort0=[0])
01-01          OrderedMuxExchange(sort0=[0])
02-01            SelectionVectorRemover
02-02              Sort(sort0=[$0], dir0=[ASC])
02-03                Project(o_year=[$0], mkt_share=[/($1, $2)])
02-04                  HashAgg(group=[{0}], agg#0=[SUM($1)], agg#1=[SUM($2)])
02-05                    HashToRandomExchange(dist0=[[$0]])
03-01                      HashAgg(group=[{0}], agg#0=[SUM($1)], agg#1=[SUM($2)])
03-02                        Project(o_year=[EXTRACT(FLAG(YEAR), $11)], $f1=[CASE(=($17, 'BRAZIL'), *($7, -(1, $8)), 0)], volume=[*($7, -(1, $8))])
03-03                          Project(p_partkey=[$5], p_type=[$6], s_suppkey=[$7], s_nationkey=[$8], l_orderkey=[$0], l_partkey=[$1], l_suppkey=[$2], l_extendedprice=[$3], l_discount=[$4], o_orderkey=[$17], o_custkey=[$18], o_orderdate=[$19], c_custkey=[$11], c_nationkey=[$12], n_nationkey=[$13], n_regionkey=[$14], n_nationkey0=[$9], n_name=[$10], r_regionkey=[$15], r_name=[$16])
03-04                            HashJoin(condition=[=($0, $17)], joinType=[inner], semi-join: =[false])
03-06                              HashJoin(condition=[=($7, $2)], joinType=[inner], semi-join: =[false])
03-09                                HashJoin(condition=[=($5, $1)], joinType=[inner], semi-join: =[false])
03-11                                  Project(l_orderkey=[$0], l_partkey=[$1], l_suppkey=[$2], l_extendedprice=[$3], l_discount=[$4])
03-12                                    Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_partkey`, `l_suppkey`, `l_extendedprice`, `l_discount`]]])
03-10                                  BroadcastExchange
04-01                                    SelectionVectorRemover
04-02                                      Filter(condition=[=($1, 'ECONOMY ANODIZED STEEL')])
04-03                                        Project(p_partkey=[$0], p_type=[$1])
04-04                                          Scan(table=[[hive, p_part_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/p_part_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`p_partkey`, `p_type`]]])
03-08                                BroadcastExchange
05-01                                  HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
05-03                                    Project(s_suppkey=[$0], s_nationkey=[$1])
05-05                                      Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_nationkey`]]])
05-02                                    Project(n_nationkey=[$0], n_name=[$1])
05-04                                      Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`]]])
03-05                              Project(c_custkey=[$0], c_nationkey=[$1], n_nationkey0=[$2], n_regionkey=[$3], r_regionkey=[$4], r_name=[$5], o_orderkey=[$6], o_custkey=[$7], o_orderdate=[$8])
03-07                                BroadcastExchange
06-01                                  HashJoin(condition=[=($7, $0)], joinType=[inner], semi-join: =[false])
06-03                                    HashToRandomExchange(dist0=[[$0]])
07-01                                      HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
07-03                                        Project(c_custkey=[$0], c_nationkey=[$1])
07-06                                          Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_custkey`, `c_nationkey`]]])
07-02                                        HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
07-05                                          Project(n_nationkey=[$0], n_regionkey=[$1])
07-08                                            Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_regionkey`]]])
07-04                                          SelectionVectorRemover
07-07                                            Filter(condition=[=($1, 'AMERICA')])
07-09                                              Project(r_regionkey=[$0], r_name=[$1])
07-10                                                Scan(table=[[hive, r_region_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/r_region_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`r_regionkey`, `r_name`]]])
06-02                                    HashToRandomExchange(dist0=[[$1]])
08-01                                      Filter(condition=[AND(>=($2, 1995-01-01), <=($2, 1996-12-31))])
08-02                                        Project(o_orderkey=[$0], o_custkey=[$1], o_orderdate=[$2])
08-03                                          Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_custkey`, `o_orderdate`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262148,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`p_partkey`", "`p_type`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/p_part_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 600000.0
  }, {
    "pop" : "project",
    "@id" : 262147,
    "exprs" : [ {
      "ref" : "`p_partkey`",
      "expr" : "`p_partkey`"
    }, {
      "ref" : "`p_type`",
      "expr" : "`p_type`"
    } ],
    "child" : 262148,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 600000.0
  }, {
    "pop" : "filter",
    "@id" : 262146,
    "child" : 262147,
    "expr" : "equal(`p_type`, 'ECONOMY ANODIZED STEEL') ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 90000.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 262145,
    "child" : 262146,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 90000.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 196618,
    "child" : 262145,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 90000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 327684,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`n_nationkey`", "`n_name`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/n_nation_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 25.0
  }, {
    "pop" : "project",
    "@id" : 327682,
    "exprs" : [ {
      "ref" : "`n_nationkey`",
      "expr" : "`n_nationkey`"
    }, {
      "ref" : "`n_name`",
      "expr" : "`n_name`"
    } ],
    "child" : 327684,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 25.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 196620,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_orderkey`", "`l_partkey`", "`l_suppkey`", "`l_extendedprice`", "`l_discount`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (2.394 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:49:54.926
--------------------------------------Finished QUERY 8.--------------------------------

--------------------------------------STARTED QUERY 9. ---------------------------------
13/04/2019 14:49:54.937
Apr 13, 2019 2:49:55 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Drill, baby, Drill."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select nation, o_year, sum(amount) as sum_profit from ( select n_name as nation, extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount from hive.p_part_parquet, hive.s_supplier_parquet, hive.l_lineitem_parquet, hive.ps_partsupp_parquet, hive.o_orders_parquet, hive.n_nation_parquet where s_suppkey = l_suppkey and ps_suppkey = l_suppkey and ps_partkey = l_partkey and p_partkey = l_partkey and o_orderkey = l_orderkey and s_nationkey = n_nationkey and p_name like '%green%' )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(nation=[$0], o_year=[$1], sum_profit=[$2])
00-02        SingleMergeExchange(sort0=[0], sort1=[1 DESC])
01-01          OrderedMuxExchange(sort0=[0], sort1=[1 DESC])
02-01            SelectionVectorRemover
02-02              Sort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[DESC])
02-03                HashAgg(group=[{0, 1}], sum_profit=[SUM($2)])
02-04                  HashToRandomExchange(dist0=[[$0]], dist1=[[$1]])
03-01                    HashAgg(group=[{0, 1}], sum_profit=[SUM($2)])
03-02                      Project(nation=[$16], o_year=[EXTRACT(FLAG(YEAR), $14)], amount=[-(*($8, -(1, $9)), *($12, $7))])
03-03                        Project(p_partkey=[$6], p_name=[$7], s_suppkey=[$10], s_nationkey=[$11], l_orderkey=[$0], l_partkey=[$1], l_suppkey=[$2], l_quantity=[$3], l_extendedprice=[$4], l_discount=[$5], ps_partkey=[$14], ps_suppkey=[$15], ps_supplycost=[$16], o_orderkey=[$8], o_orderdate=[$9], n_nationkey=[$12], n_name=[$13])
03-04                          HashJoin(condition=[AND(=($2, $15), =($1, $14))], joinType=[inner], semi-join: =[false])
03-06                            HashJoin(condition=[=($10, $2)], joinType=[inner], semi-join: =[false])
03-08                              HashJoin(condition=[=($0, $8)], joinType=[inner], semi-join: =[false])
03-10                                HashJoin(condition=[=($6, $1)], joinType=[inner], semi-join: =[false])
03-12                                  Project(l_orderkey=[$0], l_partkey=[$1], l_suppkey=[$2], l_quantity=[$3], l_extendedprice=[$4], l_discount=[$5])
03-13                                    Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_partkey`, `l_suppkey`, `l_quantity`, `l_extendedprice`, `l_discount`]]])
03-11                                  BroadcastExchange
04-01                                    SelectionVectorRemover
04-02                                      Filter(condition=[LIKE($1, '%green%')])
04-03                                        Project(p_partkey=[$0], p_name=[$1])
04-04                                          Scan(table=[[hive, p_part_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/p_part_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`p_partkey`, `p_name`]]])
03-09                                BroadcastExchange
05-01                                  Project(o_orderkey=[$0], o_orderdate=[$1])
05-02                                    Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_orderdate`]]])
03-07                              BroadcastExchange
06-01                                HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
06-03                                  Project(s_suppkey=[$0], s_nationkey=[$1])
06-05                                    Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_nationkey`]]])
06-02                                  Project(n_nationkey=[$0], n_name=[$1])
06-04                                    Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`]]])
03-05                            BroadcastExchange
07-01                              Project(ps_partkey=[$0], ps_suppkey=[$1], ps_supplycost=[$2])
07-02                                Scan(table=[[hive, ps_partsupp_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000001_0]], numFiles=3, numRowGroups=3, columns=[`ps_partkey`, `ps_suppkey`, `ps_supplycost`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 458754,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`ps_partkey`", "`ps_suppkey`", "`ps_supplycost`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 2400000.0
  }, {
    "pop" : "project",
    "@id" : 458753,
    "exprs" : [ {
      "ref" : "`ps_partkey`",
      "expr" : "`ps_partkey`"
    }, {
      "ref" : "`ps_suppkey`",
      "expr" : "`ps_suppkey`"
    }, {
      "ref" : "`ps_supplycost`",
      "expr" : "`ps_supplycost`"
    } ],
    "child" : 458754,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 2400000.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 196613,
    "child" : 458753,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 2400000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393221,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`s_suppkey`", "`s_nationkey`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/s_supplier_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 30000.0
  }, {
    "pop" : "project",
    "@id" : 393219,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`s_nationkey`",
      "expr" : "`s_nationkey`"
    } ],
    "child" : 393221,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 327682,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`o_orderkey`", "`o_orderdate`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/o_orders_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/o_orders_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1500000.0
  }, {
    "pop" : "project",
    "@id" : 327681,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_orderdate`",
      "expr" : "`o_orderdate`"
    } ],
    "child" : 327682,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 196617,
    "child" : 327681,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 196621,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_orderkey`", "`l_partkey`", "`l_suppkey`", "`l_quantity`", "`l_extendedprice`", "`l_discount`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (2.361 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:00.577
--------------------------------------Finished QUERY 9.--------------------------------

--------------------------------------STARTED QUERY 10. ---------------------------------
13/04/2019 14:50:00.587
Apr 13, 2019 2:50:01 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Two things are infinite: the universe and Drill; and I'm not sure about the universe."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount))[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(c_custkey=[$0], c_name=[$1], revenue=[$2], c_acctbal=[$3], n_name=[$4], c_address=[$5], c_phone=[$6], c_comment=[$7])
00-02        SelectionVectorRemover
00-03          Limit(fetch=[20])
00-04            Limit(fetch=[20])
00-05              SelectionVectorRemover
00-06                TopN(limit=[20])
00-07                  Project(c_custkey=[$0], c_name=[$1], revenue=[$2], c_acctbal=[$3], n_name=[$4], c_address=[$5], c_phone=[$6], c_comment=[$7])
00-08                    HashToRandomExchange(dist0=[[$2]])
01-01                      UnorderedMuxExchange
02-01                        Project(c_custkey=[$0], c_name=[$1], revenue=[$2], c_acctbal=[$3], n_name=[$4], c_address=[$5], c_phone=[$6], c_comment=[$7], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($2, 1301011)])
02-02                          Project(c_custkey=[$0], c_name=[$1], revenue=[$7], c_acctbal=[$2], n_name=[$4], c_address=[$5], c_phone=[$3], c_comment=[$6])
02-03                            HashAgg(group=[{0, 1, 2, 3, 4, 5, 6}], revenue=[SUM($7)])
02-04                              Project(c_custkey=[$0], c_name=[$1], c_acctbal=[$2], c_phone=[$3], n_name=[$4], c_address=[$5], c_comment=[$6], revenue=[$7])
02-05                                HashToRandomExchange(dist0=[[$0]], dist1=[[$1]], dist2=[[$2]], dist3=[[$3]], dist4=[[$4]], dist5=[[$5]], dist6=[[$6]])
03-01                                  UnorderedMuxExchange
04-01                                    Project(c_custkey=[$0], c_name=[$1], c_acctbal=[$2], c_phone=[$3], n_name=[$4], c_address=[$5], c_comment=[$6], revenue=[$7], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($6, hash32AsDouble($5, hash32AsDouble($4, hash32AsDouble($3, hash32AsDouble($2, hash32AsDouble($1, hash32AsDouble($0, 1301011)))))))])
04-02                                      HashAgg(group=[{0, 1, 2, 3, 4, 5, 6}], revenue=[SUM($7)])
04-03                                        Project(c_custkey=[$0], c_name=[$1], c_acctbal=[$5], c_phone=[$4], n_name=[$15], c_address=[$2], c_comment=[$6], $f7=[*($11, -(1, $12))])
04-04                                          Project(c_custkey=[$4], c_name=[$5], c_address=[$6], c_nationkey=[$7], c_phone=[$8], c_acctbal=[$9], c_comment=[$10], o_orderkey=[$13], o_custkey=[$14], o_orderdate=[$15], l_orderkey=[$0], l_extendedprice=[$1], l_discount=[$2], l_returnflag=[$3], n_nationkey=[$11], n_name=[$12])
04-05                                            HashJoin(condition=[=($13, $0)], joinType=[inner], semi-join: =[false])
04-07                                              Project(l_orderkey=[$0], l_extendedprice=[$1], l_discount=[$2], l_returnflag=[$3])
04-09                                                HashToRandomExchange(dist0=[[$0]])
05-01                                                  UnorderedMuxExchange
07-01                                                    Project(l_orderkey=[$0], l_extendedprice=[$1], l_discount=[$2], l_returnflag=[$3], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
07-02                                                      SelectionVectorRemover
07-03                                                        Filter(condition=[=($3, 'R')])
07-04                                                          Project(l_orderkey=[$0], l_extendedprice=[$1], l_discount=[$2], l_returnflag=[$3])
07-05                                                            Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_extendedprice`, `l_discount`, `l_returnflag`]]])
04-06                                              Project(c_custkey=[$0], c_name=[$1], c_address=[$2], c_nationkey=[$3], c_phone=[$4], c_acctbal=[$5], c_comment=[$6], n_nationkey=[$7], n_name=[$8], o_orderkey=[$9], o_custkey=[$10], o_orderdate=[$11])
04-08                                                HashToRandomExchange(dist0=[[$9]])
06-01                                                  UnorderedMuxExchange
08-01                                                    Project(c_custkey=[$0], c_name=[$1], c_address=[$2], c_nationkey=[$3], c_phone=[$4], c_acctbal=[$5], c_comment=[$6], n_nationkey=[$7], n_name=[$8], o_orderkey=[$9], o_custkey=[$10], o_orderdate=[$11], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($9, 1301011)])
08-02                                                      HashJoin(condition=[=($0, $10)], joinType=[inner], semi-join: =[false])
08-04                                                        HashJoin(condition=[=($3, $7)], joinType=[inner], semi-join: =[false])
08-06                                                          Project(c_custkey=[$0], c_name=[$1], c_address=[$2], c_nationkey=[$3], c_phone=[$4], c_acctbal=[$5], c_comment=[$6])
08-08                                                            Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_custkey`, `c_name`, `c_address`, `c_nationkey`, `c_phone`, `c_acctbal`, `c_comment`]]])
08-05                                                          Project(n_nationkey=[$0], n_name=[$1])
08-07                                                            Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`]]])
08-03                                                        BroadcastExchange
09-01                                                          SelectionVectorRemover
09-02                                                            Filter(condition=[AND(>=($2, 1993-10-01), <($2, 1994-01-01 00:00:00))])
09-03                                                              Project(o_orderkey=[$0], o_custkey=[$1], o_orderdate=[$2])
09-04                                                                Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_custkey`, `o_orderdate`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 524295,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`n_nationkey`", "`n_name`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/n_nation_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 25.0
  }, {
    "pop" : "project",
    "@id" : 524293,
    "exprs" : [ {
      "ref" : "`n_nationkey`",
      "expr" : "`n_nationkey`"
    }, {
      "ref" : "`n_name`",
      "expr" : "`n_name`"
    } ],
    "child" : 524295,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 25.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 524296,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`c_custkey`", "`c_name`", "`c_address`", "`c_nationkey`", "`c_phone`", "`c_acctbal`", "`c_comment`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/c_customer_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 524294,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    }, {
      "ref" : "`c_name`",
      "expr" : "`c_name`"
    }, {
      "ref" : "`c_address`",
      "expr" : "`c_address`"
    }, {
      "ref" : "`c_nationkey`",
      "expr" : "`c_nationkey`"
    }, {
      "ref" : "`c_phone`",
      "expr" : "`c_phone`"
    }, {
      "ref" : "`c_acctbal`",
      "expr" : "`c_acctbal`"
    }, {
      "ref" : "`c_comment`",
      "expr" : "`c_comment`"
    } ],
    "child" : 524296,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "hash-join",
    "@id" : 524292,
    "left" : 524294,
    "right" : 524293,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`c_nationkey`",
      "right" : "`n_nationkey`"
    } ],
    "joinType" : "INNER",
    "semiJoin" : false,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
 [1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (1.248 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:05.154
--------------------------------------Finished QUERY 10.--------------------------------

--------------------------------------STARTED QUERY 11. ---------------------------------
13/04/2019 14:50:05.163
Apr 13, 2019 2:50:05 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"You told me to, Drill Sergeant!"
0: jdbc:drill:zk=zookeeper:2181> explain plan for select ps_partkey, sum(ps_supplycost * ps_availqty) as value1 from hive.ps_partsupp_parquet, hive.s_supplier_parquet, hive.n_nation_parquet where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' group by ps_partkey having sum(ps_supplycost * ps_availqty) > ( select sum(ps_supplycost * ps_availqty) * 0.0001 from hive.ps_partsupp_parquet, hive.s_supplier_parquet, hive.n_nation_parquet where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'GERMANY' )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(ps_partkey=[$0], value1=[$1])
00-02        SelectionVectorRemover
00-03          Sort(sort0=[$1], dir0=[DESC])
00-04            Project(ps_partkey=[$0], value1=[$1])
00-05              HashToRandomExchange(dist0=[[$1]])
01-01                UnorderedMuxExchange
02-01                  Project(ps_partkey=[$0], value1=[$1], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($1, 1301011)])
02-02                    Project(ps_partkey=[$0], value1=[$1])
02-03                      SelectionVectorRemover
02-04                        Filter(condition=[>($1, $2)])
02-05                          NestedLoopJoin(condition=[true], joinType=[left])
02-07                            HashAgg(group=[{0}], value1=[SUM($1)])
02-08                              Project(ps_partkey=[$0], value1=[$1])
02-09                                HashToRandomExchange(dist0=[[$0]])
03-01                                  UnorderedMuxExchange
05-01                                    Project(ps_partkey=[$0], value1=[$1], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
05-02                                      HashAgg(group=[{0}], value1=[SUM($1)])
05-03                                        Project(ps_partkey=[$0], $f1=[*($3, $2)])
05-04                                          HashJoin(condition=[=($1, $4)], joinType=[inner], semi-join: =[false])
05-06                                            Project(ps_partkey=[$0], ps_suppkey=[$1], ps_availqty=[$2], ps_supplycost=[$3])
05-07                                              Scan(table=[[hive, ps_partsupp_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000001_0]], numFiles=3, numRowGroups=3, columns=[`ps_partkey`, `ps_suppkey`, `ps_availqty`, `ps_supplycost`]]])
05-05                                            BroadcastExchange
07-01                                              HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
07-03                                                Project(s_suppkey=[$0], s_nationkey=[$1])
07-05                                                  Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_nationkey`]]])
07-02                                                SelectionVectorRemover
07-04                                                  Filter(condition=[=($1, 'GERMANY')])
07-06                                                    Project(n_nationkey=[$0], n_name=[$1])
07-07                                                      Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`]]])
02-06                            BroadcastExchange
04-01                              StreamAgg(group=[{}], agg#0=[SINGLE_VALUE($0)])
04-02                                Project(EXPR$0=[*($0, 0.0001)])
04-03                                  StreamAgg(group=[{}], agg#0=[SUM($0)])
04-04                                    UnionExchange
06-01                                      StreamAgg(group=[{}], agg#0=[SUM($0)])
06-02                                        Project($f0=[*($2, $1)])
06-03                                          HashJoin(condition=[=($0, $3)], joinType=[inner], semi-join: =[false])
06-05                                            Project(ps_suppkey=[$0], ps_availqty=[$1], ps_supplycost=[$2])
06-06                                              Scan(table=[[hive, ps_partsupp_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000001_0]], numFiles=3, numRowGroups=3, columns=[`ps_suppkey`, `ps_availqty`, `ps_supplycost`]]])
06-04                                            BroadcastExchange
08-01                                              HashJoin(condition=[=($1, $2)], joinType=[inner], semi-join: =[false])
08-03                                                Project(s_suppkey=[$0], s_nationkey=[$1])
08-05                                                  Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_nationkey`]]])
08-02                                                SelectionVectorRemover
08-04                                                  Filter(condition=[=($1, 'GERMANY')])
08-06                                                    Project(n_nationkey=[$0], n_name=[$1])
08-07                                                      Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 458759,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`n_nationkey`", "`n_name`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/n_nation_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 25.0
  }, {
    "pop" : "project",
    "@id" : 458758,
    "exprs" : [ {
      "ref" : "`n_nationkey`",
      "expr" : "`n_nationkey`"
    }, {
      "ref" : "`n_name`",
      "expr" : "`n_name`"
    } ],
    "child" : 458759,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 25.0
  }, {
    "pop" : "filter",
    "@id" : 458756,
    "child" : 458758,
    "expr" : "equal(`n_name`, 'GERMANY') ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 3.75
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 458754,
    "child" : 458756,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 3.75
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 458757,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`s_suppkey`", "`s_nationkey`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/s_supplier_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 30000.0
  }, {
    "pop" : "project",
    "@id" : 458755,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`s_nationkey`",
      "expr" : "`s_nationkey`"
    } ],
    "child" : 458757,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "hash-join",
    "@id" : 458753,
    "left" : 458755,
    "right" : 458754,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`s_nationkey`",
      "right" : "`n_nationkey`"
    } ],
    "joinType" : "INNER",
    "semiJoin" : false,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 327685,
    "child" : 458753,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393222,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`ps_suppkey`", "`ps_availqty`", "`ps_supplycost`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 2400000.0
  }, {
    "pop" : "project",
    "@id" : 393221,
    "exprs" : [ {
      "ref" : "`ps_suppkey`",
      "expr" : "`ps_suppkey`"
    }, {
      "ref" : "`ps_availqty`",
      "expr" : "`ps_availqty`"
    }, {
      "ref" : "`ps_supplycost`",
      "expr" : "`ps_supplycost`"
    } ],
    "child" : 393222,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 2400000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 524295,
    "userName" : "ro[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (1.075 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:09.502
--------------------------------------Finished QUERY 11.--------------------------------

--------------------------------------STARTED QUERY 12. ---------------------------------
13/04/2019 14:50:09.512
Apr 13, 2019 2:50:10 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Keep your data close, but your Drillbits closer."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select l_shipmode, sum(case when o_orderpriority ='1-URGENT' or o_orderpriority ='2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from hive.o_orders_parquet, hive.l_lineitem_parquet where o_orderkey = l_orderkey and l_shipmode in ('MAIL', 'SHIP')[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(l_shipmode=[$0], high_line_count=[$1], low_line_count=[$2])
00-02        SingleMergeExchange(sort0=[0])
01-01          OrderedMuxExchange(sort0=[0])
02-01            SelectionVectorRemover
02-02              Sort(sort0=[$0], dir0=[ASC])
02-03                HashAgg(group=[{0}], high_line_count=[$SUM0($1)], low_line_count=[$SUM0($2)])
02-04                  HashToRandomExchange(dist0=[[$0]])
03-01                    HashAgg(group=[{0}], high_line_count=[$SUM0($1)], low_line_count=[$SUM0($2)])
03-02                      Project(l_shipmode=[$6], $f1=[CASE(OR(=($1, '1-URGENT'), =($1, '2-HIGH')), 1, 0)], $f2=[CASE(AND(<>($1, '1-URGENT'), <>($1, '2-HIGH')), 1, 0)])
03-03                        HashJoin(condition=[=($0, $2)], joinType=[inner], semi-join: =[false])
03-05                          HashToRandomExchange(dist0=[[$0]])
04-01                            Project(o_orderkey=[$0], o_orderpriority=[$1])
04-02                              Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_orderpriority`]]])
03-04                          HashToRandomExchange(dist0=[[$0]])
05-01                            Filter(condition=[AND(OR(=($4, 'MAIL'), =($4, 'SHIP')), <($2, $3), <($1, $2), >=($3, 1994-01-01), <($3, 1995-01-01 00:00:00))])
05-02                              Project(l_orderkey=[$0], l_shipdate=[$1], l_commitdate=[$2], l_receiptdate=[$3], l_shipmode=[$4])
05-03                                Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipmode`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262146,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`o_orderkey`", "`o_orderpriority`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/o_orders_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/o_orders_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1500000.0
  }, {
    "pop" : "project",
    "@id" : 262145,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_orderpriority`",
      "expr" : "`o_orderpriority`"
    } ],
    "child" : 262146,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 196613,
    "child" : 262145,
    "expr" : "hash32AsDouble(`o_orderkey`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 327683,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_orderkey`", "`l_shipdate`", "`l_commitdate`", "`l_receiptdate`", "`l_shipmode`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 327682,
    "exprs" : [ {
      "ref" : "`l_orderkey`",
      "expr" : "`l_orderkey`"
    }, {
      "ref" : "`l_shipdate`",
      "expr" : "`l_shipdate`"
    }, {
      "ref" : "`l_commitdate`",
      "expr" : "`l_commitdate`"
    }, {
      "ref" : "`l_receiptdate`",
      "expr" : "`l_receiptdate`"
    }, {
      "ref" : "`l_shipmode`",
      "expr" : "`l_shipmode`"
    } ],
    "child" : 327683,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "filter",
    "@id" : 327681,
    "child" : 327682,
    "expr" : "booleanAnd(booleanOr(equal(`l_shipmode`, 'MAIL') , equal(`l_shipmode`, 'SHIP') ) , less_than(`l_commitdate`, `l_receiptdate`) , less_than(`l_shipdate`, `l_commitdate`) , greater_than_or_equal_to(`l_receiptdate`, cast( 757382400000 as DATE)) , less_than(`l_receiptdate`, cast( 788918400000 as TIMESTAMP)) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 281197.015625
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 196612,
    "child" : 327681,
    "expr" : "hash32AsDouble(`l_orderkey`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 281197.015625
  }, {
    "pop" : "hash-join",
    "@id" : 196611,
    "left" : 196613,
    "right" : 196612,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`o_orderkey`",
      "right" : "`l_orderkey`"
    } ],
    "joinType" : "INNER",
    "semiJoin" : false,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "project",
    "@id" : 196610,
    "exprs" : [ {
      "ref" : "`l_shipmode`",
      "expr" : "`l_shipmode`"
    }, {
      "ref" : "`$f1`",
      "expr" : " ( if (booleanOr(equal(`o_orderpriority`, '1-URGENT') , equal(`o_orderpriority`, '2-HIGH') )  ) then (1 )  else (0 )  end  ) "
    }, {
      "ref" : "`$f2`",
      "expr" : " ( if (booleanAnd(not_equal(`o_orderpriority`, '1-URGENT') , not_equal(`o_orderpriority`, '2-HIGH') )  ) then (1 )  else (0 )  end  ) "
    } ],
    "child" : 196611,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "hash-aggregate",
    "@id" : 196609,
    "child" : 196610,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_1of2",
    "groupByExprs" : [ {
      "ref" : "`l_shipmode`",
      "expr" : "`l_shipmode`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`high_line_count`",
      "expr" : "$sum0(`$f1`) "
    }, {
      "ref" : "`low_line_count`",
      "expr" : "$sum0(`$f2`) "
    } ],
    "cost" : 750000.0
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 131076,
    "child" : 196609,
    "expr" : "hash32AsDouble(`l_shipmode`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 150000.0
  }, {
    "pop" : "hash-aggregate",
    "@id" : 131075,
    "child" : 131076,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_2of2",
    "groupByExprs" : [ {
      "ref" : "`l_shipmode`",
      "expr" : "`l_shipmode`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`high_line_count`",
      "expr" : "$sum0(`high_line_count`) "
    }, {
      "ref" : "`low_line_count`",
      "expr" : "$sum0(`low_line_count`) "
    } ],
    "cost" : 75000.0
  }, {
    "pop" : "external-sort",
    "@id" : 131074,
    "child" : 131075,
    "orderings" : [ {
      "order" : "ASC",
      "expr" : "`l_shipmode`",
      "nullDirection" : "LAST"
    } ],
    "reverse" : false,
    "initialAllocation" : 20000000,
    "maxAllocation" : 10000000000,
    "cost" : 15000.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 131073,
    "child" : 131074,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 15000.0
  }, {
    "pop" : "ordered-mux-exchange",
    "@id" : 65537,
    "child" : 131073,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 15000.0
  }, {
    "pop" : "single-merge-exchange",
    "@id" : 2,
    "child" : 65537,
    "orderings" : [ {
      "order" : "ASC",
      "expr" : "`l_shipmode`",
      "nullDirection" : "LAST"
    } ],
    "initialAllocation" : 1000000,
    "ma[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (0.641 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:13.546
--------------------------------------Finished QUERY 12.--------------------------------

--------------------------------------STARTED QUERY 13. ---------------------------------
13/04/2019 14:50:13.557
Apr 13, 2019 2:50:14 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"There are two types of analysts in the world: those who use Drill and those who don't."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select c_count, count(*) as custdist from ( select c_custkey, count(o_orderkey) from hive.c_customer_parquet left outer join hive.o_orders_parquet on c_custkey = o_custkey and o_comment not like '%special%requests%' group by c_custkey )as c_orders (c_custkey, c_count)[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(c_count=[$0], custdist=[$1])
00-02        SelectionVectorRemover
00-03          Sort(sort0=[$1], sort1=[$0], dir0=[DESC], dir1=[DESC])
00-04            HashAgg(group=[{0}], custdist=[COUNT()])
00-05              Project(c_count=[$0])
00-06                HashToRandomExchange(dist0=[[$0]])
01-01                  UnorderedMuxExchange
02-01                    Project(c_count=[$0], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
02-02                      Project(c_count=[$1])
02-03                        HashAgg(group=[{0}], EXPR$1=[COUNT($1)])
02-04                          Project(c_custkey=[$0], o_orderkey=[$1])
02-05                            HashJoin(condition=[=($0, $2)], joinType=[left], semi-join: =[false])
02-07                              Project(c_custkey=[$0])
02-09                                HashToRandomExchange(dist0=[[$0]])
03-01                                  UnorderedMuxExchange
05-01                                    Project(c_custkey=[$0], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
05-02                                      Project(c_custkey=[$0])
05-03                                        Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_custkey`]]])
02-06                              Project(o_orderkey=[$0], o_custkey=[$1], o_comment=[$2])
02-08                                HashToRandomExchange(dist0=[[$1]])
04-01                                  UnorderedMuxExchange
06-01                                    Project(o_orderkey=[$0], o_custkey=[$1], o_comment=[$2], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($1, 1301011)])
06-02                                      SelectionVectorRemover
06-03                                        Filter(condition=[NOT(LIKE($2, '%special%requests%'))])
06-04                                          Project(o_orderkey=[$0], o_custkey=[$1], o_comment=[$2])
06-05                                            Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_custkey`, `o_comment`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393221,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`o_orderkey`", "`o_custkey`", "`o_comment`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/o_orders_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/o_orders_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1500000.0
  }, {
    "pop" : "project",
    "@id" : 393220,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_custkey`",
      "expr" : "`o_custkey`"
    }, {
      "ref" : "`o_comment`",
      "expr" : "`o_comment`"
    } ],
    "child" : 393221,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1500000.0
  }, {
    "pop" : "filter",
    "@id" : 393219,
    "child" : 393220,
    "expr" : "not(like(`o_comment`, '%special%requests%') ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 393218,
    "child" : 393219,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "project",
    "@id" : 393217,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_custkey`",
      "expr" : "`o_custkey`"
    }, {
      "ref" : "`o_comment`",
      "expr" : "`o_comment`"
    }, {
      "ref" : "`E_X_P_R_H_A_S_H_F_I_E_L_D`",
      "expr" : "hash32asdouble(`o_custkey`, 1301011) "
    } ],
    "child" : 393218,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "unordered-mux-exchange",
    "@id" : 262145,
    "child" : 393217,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 131080,
    "child" : 262145,
    "expr" : "`E_X_P_R_H_A_S_H_F_I_E_L_D`",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "project",
    "@id" : 131078,
    "exprs" : [ {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    }, {
      "ref" : "`o_custkey`",
      "expr" : "`o_custkey`"
    }, {
      "ref" : "`o_comment`",
      "expr" : "`o_comment`"
    } ],
    "child" : 131080,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 375000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 327683,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`c_custkey`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/c_customer_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 327682,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    } ],
    "child" : 327683,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 327681,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    }, {
      "ref" : "`E_X_P_R_H_A_S_H_F_I_E_L_D`",
      "expr" : "hash32asdouble(`c_custkey`, 1301011) "
    } ],
    "child" : 327682,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "unordered-mux-exchange",
    "@id" : 196609,
    "child" : 327681,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 131081,
    "child" : 196609,
    "expr" : "`E_X_P_R_H_A_S_H_F_I_E_L_D`",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 131079,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    } ],
    "child" : 131081,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "hash-join",
    "@id" : 131077,
    "left" : 131079,
    "right" : 131078,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`c_custkey`",
      "right" : "`o_custkey`"
    } ],
    "joinType" : "LEFT",
    "semiJoin" : false,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 131076,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    }, {
      "ref" : "`o_orderkey`",
      "expr" : "`o_orderkey`"
    } ],
    "child" : 131077,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "hash-aggregate",
    "@id" : 131075,
    "child" : 131076,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_1of1",
    "groupByExprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`EXPR$1`",
      "expr" : "count(`o_orderkey`) "
    } ],
    "cost" : 225000.0
  }, {
    "pop" : "project",
    "@id" : 131074,
    "exprs" : [ {
      "ref" : "`c_count`",
      "expr" : "`EXPR$1`"
    } ],
    "child" : 131075,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 45000.0
  }, {
    "pop" : "project",
    "@id" : 131073,
    "exprs" : [ {
      "ref" : "`c_count`",
      "expr" : "`c_count`"
    }, {
      "ref" : "`E_X_P_R_H_A_S_H_F_I_E_L_D`",
      "expr" : "hash32asdouble(`c_count`, 1301011) "
    } ],
    "child" : 131074,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 45000.0
  }, {
    "pop" : "unordered-mux-exchange",
    "@id" : 65537,
    "child" : 131073,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 45000.0
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 6,
    "child" : 65537,
    "expr" : "`E_X_P_R_H_A_S_H_F_I_E_L_D`",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 45000.0
  }, {
    "pop" : "project",
    "@id" : 5,
    "exprs" : [ {
      "ref" : "`c_count`",
      "expr" : "`c_count`"
    } ],
    "child" : 6,
    "outputProj" : false,
    "initialAllocation" : 1[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (0.643 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:17.532
--------------------------------------Finished QUERY 13.--------------------------------

--------------------------------------STARTED QUERY 14. ---------------------------------
13/04/2019 14:50:17.542
Apr 13, 2019 2:50:18 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"A Drill is a terrible thing to waste."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice*(1-l_discount) else 0 end) / sum(l_extendedprice * (1 - l_discount))[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(promo_revenue=[/(*(100.00, $0), $1)])
00-02        StreamAgg(group=[{}], agg#0=[SUM($0)], agg#1=[SUM($1)])
00-03          UnionExchange
01-01            StreamAgg(group=[{}], agg#0=[SUM($0)], agg#1=[SUM($1)])
01-02              Project($f0=[CASE(LIKE($5, 'PROMO%'), *($1, -(1, $2)), 0)], $f1=[*($1, -(1, $2))])
01-03                HashJoin(condition=[=($0, $4)], joinType=[inner], semi-join: =[false])
01-05                  SelectionVectorRemover
01-06                    Filter(condition=[AND(>=($3, 1995-09-01), <($3, 1995-10-01 00:00:00))])
01-07                      Project(l_partkey=[$0], l_extendedprice=[$1], l_discount=[$2], l_shipdate=[$3])
01-08                        Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_partkey`, `l_extendedprice`, `l_discount`, `l_shipdate`]]])
01-04                  BroadcastExchange
02-01                    Project(p_partkey=[$0], p_type=[$1])
02-02                      Scan(table=[[hive, p_part_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/p_part_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`p_partkey`, `p_type`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 131074,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`p_partkey`", "`p_type`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/p_part_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 600000.0
  }, {
    "pop" : "project",
    "@id" : 131073,
    "exprs" : [ {
      "ref" : "`p_partkey`",
      "expr" : "`p_partkey`"
    }, {
      "ref" : "`p_type`",
      "expr" : "`p_type`"
    } ],
    "child" : 131074,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 600000.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 65540,
    "child" : 131073,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 600000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 65544,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_partkey`", "`l_extendedprice`", "`l_discount`", "`l_shipdate`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 65543,
    "exprs" : [ {
      "ref" : "`l_partkey`",
      "expr" : "`l_partkey`"
    }, {
      "ref" : "`l_extendedprice`",
      "expr" : "`l_extendedprice`"
    }, {
      "ref" : "`l_discount`",
      "expr" : "`l_discount`"
    }, {
      "ref" : "`l_shipdate`",
      "expr" : "`l_shipdate`"
    } ],
    "child" : 65544,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "filter",
    "@id" : 65542,
    "child" : 65543,
    "expr" : "booleanAnd(greater_than_or_equal_to(`l_shipdate`, cast( 809913600000 as DATE)) , less_than(`l_shipdate`, cast( 812505600000 as TIMESTAMP)) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 4499152.25
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 65541,
    "child" : 65542,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 4499152.25
  }, {
    "pop" : "hash-join",
    "@id" : 65539,
    "left" : 65541,
    "right" : 65540,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`l_partkey`",
      "right" : "`p_partkey`"
    } ],
    "joinType" : "INNER",
    "semiJoin" : false,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 4499152.25
  }, {
    "pop" : "project",
    "@id" : 65538,
    "exprs" : [ {
      "ref" : "`$f0`",
      "expr" : " ( if (like(`p_type`, 'PROMO%')  ) then (multiply(`l_extendedprice`, subtract(1, `l_discount`) )  )  else (0 )  end  ) "
    }, {
      "ref" : "`$f1`",
      "expr" : "multiply(`l_extendedprice`, subtract(1, `l_discount`) ) "
    } ],
    "child" : 65539,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 4499152.25
  }, {
    "pop" : "streaming-aggregate",
    "@id" : 65537,
    "child" : 65538,
    "keys" : [ ],
    "exprs" : [ {
      "ref" : "`$f0`",
      "expr" : "sum(`$f0`) "
    }, {
      "ref" : "`$f1`",
      "expr" : "sum(`$f1`) "
    } ],
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "union-exchange",
    "@id" : 3,
    "child" : 65537,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "streaming-aggregate",
    "@id" : 2,
    "child" : 3,
    "keys" : [ ],
    "exprs" : [ {
      "ref" : "`$f0`",
      "expr" : "sum(`$f0`) "
    }, {
      "ref" : "`$f1`",
      "expr" : "sum(`$f1`) "
    } ],
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "project",
    "@id" : 1,
    "exprs" : [ {
      "ref" : "`promo_revenue`",
      "expr" : "divide(multiply(100.00, `$f0`) , `$f1`) "
    } ],
    "child" : 2,
    "outputProj" : true,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "screen",
    "@id" : 0,
    "child" : 1,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  } ]
}[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (0.636 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:21.480
--------------------------------------Finished QUERY 14.--------------------------------

--------------------------------------STARTED QUERY 15. ---------------------------------
--------------------------------------Finished QUERY 15.--------------------------------
--------------------------------------STARTED QUERY 16. ---------------------------------
13/04/2019 14:50:21.495
Apr 13, 2019 2:50:22 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Just Drill It."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from hive.ps_partsupp_parquet, hive.p_part_parquet where p_partkey = ps_partkey and p_brand <> 'Brand#45' and p_type not like 'MEDIUM POLISHED%'  and p_size in (49, 14, 23, 45, 19, 3, 36, 9) and ps_suppkey not in ( select s_suppkey from hive.s_supplier_parquet where s_comment like '%Customer%Complaints%' )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(p_brand=[$0], p_type=[$1], p_size=[$2], supplier_cnt=[$3])
00-02        SelectionVectorRemover
00-03          Limit(fetch=[20000])
00-04            SelectionVectorRemover
00-05              Sort(sort0=[$3], sort1=[$0], sort2=[$1], sort3=[$2], dir0=[DESC], dir1=[ASC], dir2=[ASC], dir3=[ASC])
00-06                HashAgg(group=[{0, 1, 2}], supplier_cnt=[COUNT($3)])
00-07                  HashAgg(group=[{0, 1, 2, 3}])
00-08                    Project(p_brand=[$0], p_type=[$1], p_size=[$2], ps_suppkey=[$3])
00-09                      HashToRandomExchange(dist0=[[$0]], dist1=[[$1]], dist2=[[$2]], dist3=[[$3]])
01-01                        UnorderedMuxExchange
02-01                          Project(p_brand=[$0], p_type=[$1], p_size=[$2], ps_suppkey=[$3], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($3, hash32AsDouble($2, hash32AsDouble($1, hash32AsDouble($0, 1301011))))])
02-02                            HashAgg(group=[{0, 1, 2, 3}])
02-03                              Project(p_brand=[$3], p_type=[$4], p_size=[$5], ps_suppkey=[$1])
02-04                                SelectionVectorRemover
02-05                                  Filter(condition=[OR(=($6, 0), AND(IS NULL($9), >=($7, $6), IS NOT NULL($1)))])
02-06                                    Project(ps_partkey=[$0], ps_suppkey=[$1], p_partkey=[$4], p_brand=[$5], p_type=[$6], p_size=[$7], c=[$8], ck=[$9], s_suppkey=[$2], i=[$3])
02-07                                      HashJoin(condition=[=($0, $4)], joinType=[inner], semi-join: =[false])
02-09                                        HashJoin(condition=[=($1, $2)], joinType=[left], semi-join: =[false])
02-11                                          Project(ps_partkey=[$0], ps_suppkey=[$1])
02-12                                            Scan(table=[[hive, ps_partsupp_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000001_0]], numFiles=3, numRowGroups=3, columns=[`ps_partkey`, `ps_suppkey`]]])
02-10                                          BroadcastExchange
03-01                                            HashAgg(group=[{0, 1}])
03-02                                              Project(s_suppkey=[$0], i=[true])
03-03                                                SelectionVectorRemover
03-04                                                  Filter(condition=[LIKE($1, '%Customer%Complaints%')])
03-05                                                    Project(s_suppkey=[$0], s_comment=[$1])
03-06                                                      Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_comment`]]])
02-08                                        BroadcastExchange
04-01                                          NestedLoopJoin(condition=[true], joinType=[inner])
04-03                                            SelectionVectorRemover
04-05                                              Filter(condition=[AND(<>($1, 'Brand#45'), OR(=($3, 49), =($3, 14), =($3, 23), =($3, 45), =($3, 19), =($3, 3), =($3, 36), =($3, 9)), NOT(LIKE($2, 'MEDIUM POLISHED%')))])
04-07                                                Project(p_partkey=[$0], p_brand=[$1], p_type=[$2], p_size=[$3])
04-09                                                  Scan(table=[[hive, p_part_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/p_part_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`p_partkey`, `p_brand`, `p_type`, `p_size`]]])
04-02                                            StreamAgg(group=[{}], c=[COUNT()], ck=[COUNT($0)])
04-04                                              Project(s_suppkey=[$0])
04-06                                                SelectionVectorRemover
04-08                                                  Filter(condition=[LIKE($1, '%Customer%Complaints%')])
04-10                                                    Project(s_suppkey=[$0], s_comment=[$1])
04-11                                                      Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_comment`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262155,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`s_suppkey`", "`s_comment`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/s_supplier_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 30000.0
  }, {
    "pop" : "project",
    "@id" : 262154,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`s_comment`",
      "expr" : "`s_comment`"
    } ],
    "child" : 262155,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "filter",
    "@id" : 262152,
    "child" : 262154,
    "expr" : "like(`s_comment`, '%Customer%Complaints%') ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 7500.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 262150,
    "child" : 262152,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 7500.0
  }, {
    "pop" : "project",
    "@id" : 262148,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    } ],
    "child" : 262150,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 7500.0
  }, {
    "pop" : "streaming-aggregate",
    "@id" : 262146,
    "child" : 262148,
    "keys" : [ ],
    "exprs" : [ {
      "ref" : "`c`",
      "expr" : "count(1) "
    }, {
      "ref" : "`ck`",
      "expr" : "count(`s_suppkey`) "
    } ],
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 131084,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`ps_partkey`", "`ps_suppkey`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/ps_partsupp_parquet/000001_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 2400000.0
  }, {
    "pop" : "project",
    "@id" : 131083,
    "exprs" : [ {
      "ref" : "`ps_partkey`",
      "expr" : "`ps_partkey`"
    }, {
      "ref" : "`ps_suppkey`",
      "expr" : "`ps_suppkey`"
    } ],
    "child" : 131084,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 2400000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 196614,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`s_suppkey`", "`s_comment`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/s_supplier_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 30000.0
  }, {
    "pop" : "project",
    "@id" : 196613,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`s_comment`",
      "expr" : "`s_comment`"
    } ],
    "child" : 196614,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "filter",
    "@id" : 196612,
    "child" : 196613,
    "expr" : "like(`s_comment`, '%Customer%Complaints%') ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 7500.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 196611,
    "child" : 196612,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 7500.0
  }, {
    "pop" : "project",
    "@id" : 196610,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`i`",
      "expr" : "true"
    } ],
    "child" : 196611,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 7500.0
  }, {
    "pop" : "hash-aggregate",
    "@id" : 196609,
    "child" : 196610,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_1of1",
    "gro[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (1.034 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:25.775
--------------------------------------Finished QUERY 16.--------------------------------

--------------------------------------STARTED QUERY 17. ---------------------------------
13/04/2019 14:50:25.785
Apr 13, 2019 2:50:26 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Just Drill It."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select sum(l_extendedprice) / 7.0 as avg_yearly from hive.l_lineitem_parquet, hive.p_part_parquet where p_partkey = l_partkey and  p_brand = 'Brand#23' and p_container = 'MED BOX'  and l_quantity < ( select 0.2 * avg(l_quantity) from hive.l_lineitem_parquet where l_partkey = p_partkey )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(avg_yearly=[/($0, 7.0)])
00-02        StreamAgg(group=[{}], agg#0=[SUM($0)])
00-03          UnionExchange
01-01            StreamAgg(group=[{}], agg#0=[SUM($0)])
01-02              Project(l_extendedprice=[$1])
01-03                SelectionVectorRemover
01-04                  Filter(condition=[<($0, CAST(*(0.2, $4)):DOUBLE)])
01-05                    HashJoin(condition=[=($2, $3)], joinType=[inner], semi-join: =[false])
01-07                      Project(l_quantity=[$1], l_extendedprice=[$2], p_partkey=[$3])
01-08                        HashJoin(condition=[=($0, $3)], joinType=[inner], semi-join: =[false])
01-10                          Project(l_partkey=[$0], l_quantity=[$1], l_extendedprice=[$2])
01-11                            Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_partkey`, `l_quantity`, `l_extendedprice`]]])
01-09                          BroadcastExchange
02-01                            Project(p_partkey=[$0])
02-02                              SelectionVectorRemover
02-03                                Filter(condition=[AND(=($1, 'Brand#23'), =($2, 'MED BOX'))])
02-04                                  Project(p_partkey=[$0], p_brand=[$1], p_container=[$2])
02-05                                    Scan(table=[[hive, p_part_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/p_part_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`p_partkey`, `p_brand`, `p_container`]]])
01-06                      BroadcastExchange
03-01                        Project(l_partkey=[$0], $f1=[divide(CastHigh(CASE(=($2, 0), null, $1)), $2)])
03-02                          HashAgg(group=[{0}], agg#0=[$SUM0($1)], agg#1=[$SUM0($2)])
03-03                            Project(l_partkey=[$0], $f1=[$1], $f2=[$2])
03-04                              HashToRandomExchange(dist0=[[$0]])
04-01                                UnorderedMuxExchange
05-01                                  Project(l_partkey=[$0], $f1=[$1], $f2=[$2], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
05-02                                    HashAgg(group=[{0}], agg#0=[$SUM0($1)], agg#1=[COUNT($1)])
05-03                                      SelectionVectorRemover
05-04                                        Filter(condition=[IS NOT NULL($0)])
05-05                                          Project(l_partkey=[$0], l_quantity=[$1])
05-06                                            Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_partkey`, `l_quantity`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 327686,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_partkey`", "`l_quantity`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 327685,
    "exprs" : [ {
      "ref" : "`l_partkey`",
      "expr" : "`l_partkey`"
    }, {
      "ref" : "`l_quantity`",
      "expr" : "`l_quantity`"
    } ],
    "child" : 327686,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "filter",
    "@id" : 327684,
    "child" : 327685,
    "expr" : "isnotnull(`l_partkey`) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.61969481E7
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 327683,
    "child" : 327684,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.61969481E7
  }, {
    "pop" : "hash-aggregate",
    "@id" : 327682,
    "child" : 327683,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_1of2",
    "groupByExprs" : [ {
      "ref" : "`l_partkey`",
      "expr" : "`l_partkey`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`$f1`",
      "expr" : "$sum0(`l_quantity`) "
    }, {
      "ref" : "`$f2`",
      "expr" : "count(`l_quantity`) "
    } ],
    "cost" : 8098474.05
  }, {
    "pop" : "project",
    "@id" : 327681,
    "exprs" : [ {
      "ref" : "`l_partkey`",
      "expr" : "`l_partkey`"
    }, {
      "ref" : "`$f1`",
      "expr" : "`$f1`"
    }, {
      "ref" : "`$f2`",
      "expr" : "`$f2`"
    }, {
      "ref" : "`E_X_P_R_H_A_S_H_F_I_E_L_D`",
      "expr" : "hash32asdouble(`l_partkey`, 1301011) "
    } ],
    "child" : 327682,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1619694.81
  }, {
    "pop" : "unordered-mux-exchange",
    "@id" : 262145,
    "child" : 327681,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1619694.81
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 196612,
    "child" : 262145,
    "expr" : "`E_X_P_R_H_A_S_H_F_I_E_L_D`",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1619694.81
  }, {
    "pop" : "project",
    "@id" : 196611,
    "exprs" : [ {
      "ref" : "`l_partkey`",
      "expr" : "`l_partkey`"
    }, {
      "ref" : "`$f1`",
      "expr" : "`$f1`"
    }, {
      "ref" : "`$f2`",
      "expr" : "`$f2`"
    } ],
    "child" : 196612,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1619694.81
  }, {
    "pop" : "hash-aggregate",
    "@id" : 196610,
    "child" : 196611,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_2of2",
    "groupByExprs" : [ {
      "ref" : "`l_partkey`",
      "expr" : "`l_partkey`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`$f1`",
      "expr" : "$sum0(`$f1`) "
    }, {
      "ref" : "`$f2`",
      "expr" : "$sum0(`$f2`) "
    } ],
    "cost" : 809847.405
  }, {
    "pop" : "project",
    "@id" : 196609,
    "exprs" : [ {
      "ref" : "`l_partkey`",
      "expr" : "`l_partkey`"
    }, {
      "ref" : "`$f1`",
      "expr" : "divide(casthigh( ( if (equal(`$f2`, 0)  ) then (NULL )  else (`$f1` )  end  ) ) , `$f2`) "
    } ],
    "child" : 196610,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 161969.481
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 65542,
    "child" : 196609,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 161969.481
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 131077,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`p_partkey`", "`p_brand`", "`p_container`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/p_part_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 600000.0
  }, {
    "pop" : "project",
    "@id" : 131076,
    "exprs" : [ {
      "ref" : "`p_partkey`",
      "expr" : "`p_partkey`"
    }, {
  [1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (1.212 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:30.296
--------------------------------------Finished QUERY 17.--------------------------------

--------------------------------------STARTED QUERY 18. ---------------------------------
13/04/2019 14:50:30.311
Apr 13, 2019 2:50:31 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Think different, think Drill."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from hive.c_customer_parquet, hive.o_orders_parquet, hive.l_lineitem_parquet where o_orderkey in ( select l_orderkey from hive.l_lineitem_parquet group by l_orderkey having sum(l_quantity) > 300 )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(c_name=[$0], c_custkey=[$1], o_orderkey=[$2], o_orderdate=[$3], o_totalprice=[$4], EXPR$5=[$5])
00-02        SelectionVectorRemover
00-03          Limit(fetch=[100])
00-04            SingleMergeExchange(sort0=[4 DESC], sort1=[3])
01-01              OrderedMuxExchange(sort0=[4 DESC], sort1=[3])
02-01                SelectionVectorRemover
02-02                  Limit(fetch=[100])
02-03                    SelectionVectorRemover
02-04                      TopN(limit=[100])
02-05                        HashToRandomExchange(dist0=[[$4]], dist1=[[$3]])
03-01                          HashAgg(group=[{0, 1, 2, 3, 4}], EXPR$5=[SUM($5)])
03-02                            HashToRandomExchange(dist0=[[$0]], dist1=[[$1]], dist2=[[$2]], dist3=[[$3]], dist4=[[$4]])
04-01                              HashAgg(group=[{0, 1, 2, 3, 4}], EXPR$5=[SUM($5)])
04-02                                Project(c_name=[$1], c_custkey=[$0], o_orderkey=[$2], o_orderdate=[$5], o_totalprice=[$4], l_quantity=[$7])
04-03                                  Project(c_custkey=[$7], c_name=[$8], o_orderkey=[$2], o_custkey=[$3], o_totalprice=[$4], o_orderdate=[$5], l_orderkey=[$0], l_quantity=[$1], l_orderkey0=[$6])
04-04                                    HashJoin(condition=[=($2, $0)], joinType=[inner], semi-join: =[false])
04-06                                      Project(l_orderkey=[$0], l_quantity=[$1])
04-08                                        Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_quantity`]]])
04-05                                      Project(o_orderkey=[$0], o_custkey=[$1], o_totalprice=[$2], o_orderdate=[$3], l_orderkey0=[$4], c_custkey=[$5], c_name=[$6])
04-07                                        BroadcastExchange
05-01                                          HashJoin(condition=[=($5, $1)], joinType=[inner], semi-join: =[false])
05-03                                            HashJoin(condition=[=($0, $4)], joinType=[inner], semi-join: =[false])
05-05                                              Project(o_orderkey=[$0], o_custkey=[$1], o_totalprice=[$2], o_orderdate=[$3])
05-06                                                Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_custkey`, `o_totalprice`, `o_orderdate`]]])
05-04                                              BroadcastExchange
06-01                                                Project(l_orderkey=[$0])
06-02                                                  SelectionVectorRemover
06-03                                                    Filter(condition=[>($1, 300)])
06-04                                                      HashAgg(group=[{0}], agg#0=[SUM($1)])
06-05                                                        HashToRandomExchange(dist0=[[$0]])
08-01                                                          HashAgg(group=[{0}], agg#0=[SUM($1)])
08-02                                                            Project(l_orderkey=[$0], l_quantity=[$1])
08-03                                                              Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_quantity`]]])
05-02                                            BroadcastExchange
07-01                                              Project(c_custkey=[$0], c_name=[$1])
07-02                                                Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_custkey`, `c_name`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 458754,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`c_custkey`", "`c_name`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/c_customer_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 458753,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    }, {
      "ref" : "`c_name`",
      "expr" : "`c_name`"
    } ],
    "child" : 458754,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 327682,
    "child" : 458753,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 524291,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_orderkey`", "`l_quantity`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 524290,
    "exprs" : [ {
      "ref" : "`l_orderkey`",
      "expr" : "`l_orderkey`"
    }, {
      "ref" : "`l_quantity`",
      "expr" : "`l_quantity`"
    } ],
    "child" : 524291,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "hash-aggregate",
    "@id" : 524289,
    "child" : 524290,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_1of2",
    "groupByExprs" : [ {
      "ref" : "`l_orderkey`",
      "expr" : "`l_orderkey`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`$f1`",
      "expr" : "sum(`l_quantity`) "
    } ],
    "cost" : 8998304.5
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 393221,
    "child" : 524289,
    "expr" : "hash32AsDouble(`l_orderkey`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1799660.9
  }, {
    "pop" : "hash-aggregate",
    "@id" : 393220,
    "child" : 393221,
    "cardinality" : 1.0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "aggPhase" : "PHASE_2of2",
    "groupByExprs" : [ {
      "ref" : "`l_orderkey`",
      "expr" : "`l_orderkey`"
    } ],
    "aggrExprs" : [ {
      "ref" : "`$f1`",
      "expr" : "sum(`$f1`) "
    } ],
    "cost" : 899830.45
  }, {
    "pop" : "filter",
    "@id" : 393219,
    "child" : 393220,
    "expr" : "greater_than(`$f1`, 300) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 89983.045
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 393218,
    "child" : 393219,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 89983.045
  }, {
    "pop" : "project",
    "@id" : 393217,
    "exprs" : [ {
      "ref" : "`l_orderkey`",
      "expr" : "`l_orderkey`"
    } ],
    "child" : 393218[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (1.085 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:35.282
--------------------------------------Finished QUERY 18.--------------------------------

--------------------------------------STARTED QUERY 19. ---------------------------------
13/04/2019 14:50:35.293
Apr 13, 2019 2:50:36 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"Think different, think Drill."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select sum(l_extendedprice * (1 - l_discount) ) as revenue from hive.l_lineitem_parquet inner join  hive.p_part_parquet on  p_partkey = l_partkey where ( p_brand = 'Brand#12' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 1 and l_quantity <= 1 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_brand = 'Brand#23' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 10 and l_quantity <= 10 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_brand = 'Brand#34' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 20 and l_quantity <= 20 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(revenue=[$0])
00-02        StreamAgg(group=[{}], revenue=[SUM($0)])
00-03          UnionExchange
01-01            StreamAgg(group=[{}], revenue=[SUM($0)])
01-02              Project($f0=[*($2, -(1, $3))])
01-03                SelectionVectorRemover
01-04                  Filter(condition=[OR(AND(=($7, 'Brand#12'), OR(=($9, 'SM CASE'), =($9, 'SM BOX'), =($9, 'SM PACK'), =($9, 'SM PKG')), >=($1, 1), <=($1, 11), >=($8, 1), <=($8, 5), OR(=($5, 'AIR'), =($5, 'AIR REG')), =($4, 'DELIVER IN PERSON')), AND(=($7, 'Brand#23'), OR(=($9, 'MED BAG'), =($9, 'MED BOX'), =($9, 'MED PKG'), =($9, 'MED PACK')), >=($1, 10), <=($1, 20), >=($8, 1), <=($8, 10), OR(=($5, 'AIR'), =($5, 'AIR REG')), =($4, 'DELIVER IN PERSON')), AND(=($7, 'Brand#34'), OR(=($9, 'LG CASE'), =($9, 'LG BOX'), =($9, 'LG PACK'), =($9, 'LG PKG')), >=($1, 20), <=($1, 30), >=($8, 1), <=($8, 15), OR(=($5, 'AIR'), =($5, 'AIR REG')), =($4, 'DELIVER IN PERSON')))])
01-05                    HashJoin(condition=[=($0, $6)], joinType=[inner], semi-join: =[false])
01-07                      Project(l_partkey=[$0], l_quantity=[$1], l_extendedprice=[$2], l_discount=[$3], l_shipinstruct=[$4], l_shipmode=[$5])
01-08                        Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_partkey`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_shipinstruct`, `l_shipmode`]]])
01-06                      BroadcastExchange
02-01                        Project(p_partkey=[$0], p_brand=[$1], p_size=[$2], p_container=[$3])
02-02                          Scan(table=[[hive, p_part_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/p_part_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`p_partkey`, `p_brand`, `p_size`, `p_container`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 65544,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`l_partkey`", "`l_quantity`", "`l_extendedprice`", "`l_discount`", "`l_shipinstruct`", "`l_shipmode`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000000_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000001_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000002_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000003_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000004_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000005_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000006_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000007_0"
    }, {
      "path" : "/user/hive/warehouse/l_lineitem_parquet/000008_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 1.7996609E7
  }, {
    "pop" : "project",
    "@id" : 65543,
    "exprs" : [ {
      "ref" : "`l_partkey`",
      "expr" : "`l_partkey`"
    }, {
      "ref" : "`l_quantity`",
      "expr" : "`l_quantity`"
    }, {
      "ref" : "`l_extendedprice`",
      "expr" : "`l_extendedprice`"
    }, {
      "ref" : "`l_discount`",
      "expr" : "`l_discount`"
    }, {
      "ref" : "`l_shipinstruct`",
      "expr" : "`l_shipinstruct`"
    }, {
      "ref" : "`l_shipmode`",
      "expr" : "`l_shipmode`"
    } ],
    "child" : 65544,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 131074,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`p_partkey`", "`p_brand`", "`p_size`", "`p_container`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/p_part_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 600000.0
  }, {
    "pop" : "project",
    "@id" : 131073,
    "exprs" : [ {
      "ref" : "`p_partkey`",
      "expr" : "`p_partkey`"
    }, {
      "ref" : "`p_brand`",
      "expr" : "`p_brand`"
    }, {
      "ref" : "`p_size`",
      "expr" : "`p_size`"
    }, {
      "ref" : "`p_container`",
      "expr" : "`p_container`"
    } ],
    "child" : 131074,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 600000.0
  }, {
    "pop" : "broadcast-exchange",
    "@id" : 65542,
    "child" : 131073,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 600000.0
  }, {
    "pop" : "hash-join",
    "@id" : 65541,
    "left" : 65543,
    "right" : 65542,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`l_partkey`",
      "right" : "`p_partkey`"
    } ],
    "joinType" : "INNER",
    "semiJoin" : false,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.7996609E7
  }, {
    "pop" : "filter",
    "@id" : 65540,
    "child" : 65541,
    "expr" : "booleanOr(booleanAnd(equal(`p_brand`, 'Brand#12') , booleanOr(equal(`p_container`, 'SM CASE') , equal(`p_container`, 'SM BOX') , equal(`p_container`, 'SM PACK') , equal(`p_container`, 'SM PKG') ) , greater_than_or_equal_to(`l_quantity`, 1) , less_than_or_equal_to(`l_quantity`, 11) , greater_than_or_equal_to(`p_size`, 1) , less_than_or_equal_to(`p_size`, 5) , booleanOr(equal(`l_shipmode`, 'AIR') , equal(`l_shipmode`, 'AIR REG') ) , equal(`l_shipinstruct`, 'DELIVER IN PERSON') ) , booleanAnd(equal(`p_brand`, 'Brand#23') , booleanOr(equal(`p_container`, 'MED BAG') , equal(`p_container`, 'MED BOX') , equal(`p_container`, 'MED PKG') , equal(`p_container`, 'MED PACK') ) , greater_than_or_equal_to(`l_quantity`, 10) , less_than_or_equal_to(`l_quantity`, 20) , greater_than_or_equal_to(`p_size`, 1) , less_than_or_equal_to(`p_size`, 10) , booleanOr(equal(`l_shipmode`, 'AIR') , equal(`l_shipmode`, 'AIR REG') ) , equal(`l_shipinstruct`, 'DELIVER IN PERSON') ) , booleanAnd(equal(`p_brand`, 'Brand#34') , booleanOr(equal(`p_container`, 'LG CASE') , equal(`p_container`, 'LG BOX') , equal(`p_container`, 'LG PACK') , equal(`p_container`, 'LG PKG') ) , greater_than_or_equal_to(`l_quantity`, 20) , less_than_or_equal_to(`l_quantity`, 30) , greater_than_or_equal_to(`p_size`, 1) , less_than_or_equal_to(`p_size`, 15) , booleanOr(equal(`l_shipmode`, 'AIR') , equal(`l_shipmode`, 'AIR REG') ) , equal(`l_shipinstruct`, 'DELIVER IN PERSON') ) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 4499152.25
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 65539,
    "child" : 65540,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 4499152.25
  }, {
    "pop" : "project",
    "@id" : 65538,
    "exprs" : [ {
      "ref" : "`$f0`",
      "expr" : "multiply(`l_extendedprice`, subtract(1, `l_discount`) ) "
    } ],
    "child" : 65539,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 4499152.25
  }, {
    "pop" : "streaming-aggregate",
    "@id" : 65537,
    "child" : 65538,
    "keys" : [ ],
    "exprs" : [ {
      "ref" : "`revenue`",
      "expr" : "sum(`$f0`) "
    } ],
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "union-exchange",
    "@id" : 3,
    "child" : 65537,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "streaming-aggregate",
    "@id" : 2,
    "child" : 3,
    "keys" : [ ],
    "exprs" : [ {
      "ref" : "`revenue`",
      "expr" : "sum(`revenue`) "
    } ],
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "project",
    "@id" : 1,
    "exprs" : [ {
      "ref" : "`revenue`",
      "expr" : "`revenue`"
    } ],
    "child" : 2,
    "outputProj" : true,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "screen",
    "@id" : 0,
    "child" : 1,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  } ]
}[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (0.7 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:39.283
--------------------------------------Finished QUERY 19.--------------------------------

--------------------------------------STARTED QUERY 20. ---------------------------------
13/04/2019 14:50:39.293
Apr 13, 2019 2:50:40 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"A query result is never late, nor is it early, it arrives precisely when it means to."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select s_name, s_address from hive.s_supplier_parquet, hive.n_nation_parquet where s_suppkey in ( select ps_suppkey from hive.ps_partsupp_parquet where ps_partkey in ( select p_partkey from hive.p_part_parquet where p_name like 'forest%' ) and ps_availqty > ( select 0.5 * sum(l_quantity) from hive.l_lineitem_parquet where l_partkey = ps_partkey and l_suppkey = ps_suppkey and l_shipdate >= date '1994-01-01' and l_shipdate < date '1994-01-01' + interval '1' year ) )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(s_name=[$0], s_address=[$1])
00-02        SingleMergeExchange(sort0=[0])
01-01          OrderedMuxExchange(sort0=[0])
02-01            SelectionVectorRemover
02-02              Sort(sort0=[$0], dir0=[ASC])
02-03                HashToRandomExchange(dist0=[[$0]])
03-01                  Project(s_name=[$1], s_address=[$2])
03-02                    HashJoin(condition=[=($0, $3)], joinType=[inner], semi-join: =[true])
03-04                      HashToRandomExchange(dist0=[[$0]])
04-01                        Filter(condition=[IS NOT NULL($0)])
04-02                          Project(s_suppkey=[$0], s_name=[$1], s_address=[$2])
04-03                            HashJoin(condition=[=($3, $4)], joinType=[inner], semi-join: =[false])
04-05                              Project(s_suppkey=[$0], s_name=[$1], s_address=[$2], s_nationkey=[$3])
04-07                                Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_name`, `s_address`, `s_nationkey`]]])
04-04                              Project(n_nationkey=[$0])
04-06                                SelectionVectorRemover
04-08                                  Filter(condition=[=($1, 'CANADA')])
04-09                                    Project(n_nationkey=[$0], n_name=[$1])
04-10                                      Scan(table=[[hive, n_nation_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/n_nation_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`n_nationkey`, `n_name`]]])
03-03                      HashToRandomExchange(dist0=[[$0]])
05-01                        Project(ps_suppkey=[$1])
05-02                          SelectionVectorRemover
05-03                            Filter(condition=[>($2, CAST(*(0.5, $5)):DOUBLE)])
05-04                              Project(ps_partkey=[$3], ps_suppkey=[$4], ps_availqty=[$5], l_partkey=[$0], l_suppkey=[$1], $f2=[$2])
05-05                                HashJoin(condition=[AND(=($3, $0), =($4, $1))], joinType=[inner], semi-join: =[false])
05-06                                  HashJoin(condition=[=($0, $3)], joinType=[inner], semi-join: =[true])
05-09                                    HashToRandomExchange(dist0=[[$0]])
07-01                                      Project(ps_partkey=[$0], ps_suppkey=[$1], ps_availqty=[$2])
07-02                                        Scan(table=[[hive, ps_partsupp_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/ps_partsupp_parquet/000001_0]], numFiles=3, numRowGroups=3, columns=[`ps_partkey`, `ps_suppkey`, `ps_availqty`]]])
05-08                                    HashToRandomExchange(dist0=[[$0]])
08-01                                      Project(p_partkey=[$0])
08-02                                        SelectionVectorRemover
08-03                                          Filter(condition=[LIKE($1, 'forest%')])
08-04                                            Project(p_partkey=[$0], p_name=[$1])
08-05                                              Scan(table=[[hive, p_part_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/p_part_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`p_partkey`, `p_name`]]])
05-07                                  HashToRandomExchange(dist0=[[$0]])
06-01                                    HashAgg(group=[{0, 1}], agg#0=[SUM($2)])
06-02                                      HashToRandomExchange(dist0=[[$0]], dist1=[[$1]])
09-01                                        HashAgg(group=[{0, 1}], agg#0=[SUM($2)])
09-02                                          Project(l_partkey=[$0], l_suppkey=[$1], l_quantity=[$2])
09-03                                            SelectionVectorRemover
09-04                                              Filter(condition=[AND(=($0, $0), =($1, $1), >=($3, 1994-01-01), <($3, 1995-01-01 00:00:00))])
09-05                                                Project(l_partkey=[$0], l_suppkey=[$1], l_quantity=[$2], l_shipdate=[$3])
09-06                                                  Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_partkey`, `l_suppkey`, `l_quantity`, `l_shipdate`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262151,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`s_suppkey`", "`s_name`", "`s_address`", "`s_nationkey`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/s_supplier_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 30000.0
  }, {
    "pop" : "project",
    "@id" : 262149,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`s_name`",
      "expr" : "`s_name`"
    }, {
      "ref" : "`s_address`",
      "expr" : "`s_address`"
    }, {
      "ref" : "`s_nationkey`",
      "expr" : "`s_nationkey`"
    } ],
    "child" : 262151,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 262154,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`n_nationkey`", "`n_name`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/n_nation_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 25.0
  }, {
    "pop" : "project",
    "@id" : 262153,
    "exprs" : [ {
      "ref" : "`n_nationkey`",
      "expr" : "`n_nationkey`"
    }, {
      "ref" : "`n_name`",
      "expr" : "`n_name`"
    } ],
    "child" : 262154,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 25.0
  }, {
    "pop" : "filter",
    "@id" : 262152,
    "child" : 262153,
    "expr" : "equal(`n_name`, 'CANADA') ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 3.75
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 262150,
    "child" : 262152,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 3.75
  }, {
    "pop" : "project",
    "@id" : 262148,
    "exprs" : [ {
      "ref" : "`n_nationkey`",
      "expr" : "`n_nationkey`"
    } ],
    "child" : 262150,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 3.75
  }, {
    "pop" : "hash-join",
    "@id" : 262147,
    "left" : 262149,
    "right" : 262148,
    "conditions" : [ {
      "relationship" : "EQUALS",
      "left" : "`s_nationkey`",
      "right" : "`n_nationkey`"
    } ],
    "joinType" : "INNER",
    "semiJoin" : false,
    "isRowKeyJoin" : false,
    "joinControl" : 0,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "project",
    "@id" : 262146,
    "exprs" : [ {
      "ref" : "`s_suppkey`",
      "expr" : "`s_suppkey`"
    }, {
      "ref" : "`s_name`",
      "expr" : "`s_name`"
    }, {
      "ref" : "`s_address`",
      "expr" : "`s_address`"
    } ],
    "child" : 262147,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 30000.0
  }, {
    "pop" : "filter",
    "@id" : 262145,
    "child" : 262146,
    "expr" : "isnotnull(`s_suppkey`) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 27000.0
  }, {
    "pop" : "hash-to-random-exchange",
    "@id" : 196612,
    "child" : 262145,
    "expr" : "hash32AsDouble(`s_suppkey`, 1301011) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 27000.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 458754,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
    [1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (1.519 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:44.103
--------------------------------------Finished QUERY 20.--------------------------------

--------------------------------------STARTED QUERY 21. ---------------------------------
13/04/2019 14:50:44.112
Apr 13, 2019 2:50:44 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"A Drill is a terrible thing to waste."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select s_name, count(*) as numwait from hive.s_supplier_parquet, hive.l_lineitem_parquet l1, hive.o_orders_parquet, hive.n_nation_parquet where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from hive.l_lineitem_parquet l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from hive.l_lineitem_parquet l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(s_name=[$0], numwait=[$1])
00-02        SelectionVectorRemover
00-03          Limit(fetch=[100])
00-04            Limit(fetch=[100])
00-05              SelectionVectorRemover
00-06                TopN(limit=[100])
00-07                  Project(s_name=[$0], numwait=[$1])
00-08                    HashToRandomExchange(dist0=[[$1]], dist1=[[$0]])
01-01                      UnorderedMuxExchange
02-01                        Project(s_name=[$0], numwait=[$1], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, hash32AsDouble($1, 1301011))])
02-02                          HashAgg(group=[{0}], numwait=[$SUM0($1)])
02-03                            Project(s_name=[$0], numwait=[$1])
02-04                              HashToRandomExchange(dist0=[[$0]])
03-01                                UnorderedMuxExchange
04-01                                  Project(s_name=[$0], numwait=[$1], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
04-02                                    HashAgg(group=[{0}], numwait=[COUNT()])
04-03                                      Project(s_name=[$0])
04-04                                        SelectionVectorRemover
04-05                                          Filter(condition=[IS NULL($5)])
04-06                                            Project(s_name=[$3], l_orderkey=[$4], l_suppkey=[$5], l_orderkey0=[$0], l_suppkey0=[$1], $f2=[$2])
04-07                                              HashJoin(condition=[AND(=($4, $0), =($5, $1))], joinType=[right], semi-join: =[false])
04-09                                                Project(l_orderkey0=[$0], l_suppkey0=[$1], $f2=[true])
04-12                                                  HashAgg(group=[{0, 1}])
04-15                                                    Project(l_orderkey0=[$0], l_suppkey0=[$1])
04-16                                                      HashToRandomExchange(dist0=[[$0]], dist1=[[$1]])
05-01                                                        UnorderedMuxExchange
08-01                                                          Project(l_orderkey0=[$0], l_suppkey0=[$1], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($1, hash32AsDouble($0, 1301011))])
08-02                                                            HashAgg(group=[{0, 1}])
08-03                                                              Project(l_orderkey0=[$2], l_suppkey0=[$3], i=[true])
08-04                                                                SelectionVectorRemover
08-05                                                                  Filter(condition=[<>($1, $3)])
08-06                                                                    HashJoin(condition=[=($0, $2)], joinType=[inner], semi-join: =[false])
08-08                                                                      SelectionVectorRemover
08-10                                                                        Filter(condition=[IS NOT NULL($0)])
08-11                                                                          Project(l_orderkey=[$0], l_suppkey=[$1])
08-12                                                                            SelectionVectorRemover
08-13                                                                              Filter(condition=[>($3, $2)])
08-14                                                                                Project(l_orderkey=[$0], l_suppkey=[$1], l_commitdate=[$2], l_receiptdate=[$3])
08-15                                                                                  Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_suppkey`, `l_commitdate`, `l_receiptdate`]]])
08-07                                                                      Project(l_orderkey0=[$0], l_suppkey0=[$1])
08-09                                                                        BroadcastExchange
11-01                                                                          HashAgg(group=[{0, 1}])
11-02                                                                            Project(l_orderkey=[$0], l_suppkey=[$1])
11-03                                                                              HashToRandomExchange(dist0=[[$0]], dist1=[[$1]])
16-01                                                                                UnorderedMuxExchange
18-01                                                                                  Project(l_orderkey=[$0], l_suppkey=[$1], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($1, hash32AsDouble($0, 1301011))])
18-02                                                                                    HashAgg(group=[{0, 1}])
18-03                                                                                      Project(l_orderkey=[$1], l_suppkey=[$2])
18-04                                                                                        HashJoin(condition=[=($0, $3)], joinType=[inner], semi-join: =[false])
18-06                                                                                          Project(s_nationkey=[$0], l_orderkey=[$1], l_suppkey=[$2])
18-07                                                                                            HashJoin(condition=[=($1, $3)], joinType=[inner], semi-join: =[false])
18-09                                                                                              Project(s_nationkey=[$1], l_orderkey=[$2], l_suppkey=[$3])
18-10                                                                                                Project(s_suppkey=[$2], s_nationkey=[$3], l_orderkey=[$0], l_suppkey=[$1])
18-11                                                                                                  HashJoin(condition=[=($2, $1)], joinType=[inner], semi-join: =[false])
18-13                                                                                                    Project(l_orderkey=[$0], l_suppkey=[$1])
18-14                                                                                                      SelectionVectorRemover
18-15                                                                                                        Filter(condition=[>($3, $2)])
18-16                                                                                                          Project(l_orderkey=[$0], l_suppkey=[$1], l_commitdate=[$2], l_receiptdate=[$3])
18-17                                                                                                            Scan(table=[[hive, l_lineitem_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000001_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000002_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000003_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000004_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000005_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000006_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000007_0], ReadEntryWithPath [path=/user/hive/warehouse/l_lineitem_parquet/000008_0]], numFiles=9, numRowGroups=17, columns=[`l_orderkey`, `l_suppkey`, `l_commitdate`, `l_receiptdate`]]])
18-12                                                                                                    BroadcastExchange
20-01                                                                                                      Project(s_suppkey=[$0], s_nationkey=[$1])
20-02                                                                                                        Scan(table=[[hive, s_supplier_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/s_supplier_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`s_suppkey`, `s_nationkey`]]])
18-08                                                                                              BroadcastExchange
21-01                                                                                                Project(o_orderkey=[$0])
21-02                                                                                                  SelectionVectorRemover
21-03                                                                                                    Filter(condition=[=($1, 'F')])
21-04                                                                                                      Project(o_orderkey=[$0], o_orderstatus=[$1])
21-05                                                                                                        Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_orderkey`, `o_orderstatus`]]])
18-05                                                                                          BroadcastExchange
22-01                                                                   [1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (2.177 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:49.550
--------------------------------------Finished QUERY 21.--------------------------------

--------------------------------------STARTED QUERY 22. ---------------------------------
13/04/2019 14:50:49.561
Apr 13, 2019 2:50:50 PM org.jline.utils.Log logr
WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)
Apache Drill 1.15.0
"You're gonna need a bigger Drill."
0: jdbc:drill:zk=zookeeper:2181> explain plan for select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone from 1 for 2) as cntrycode, c_acctbal from hive.c_customer_parquet where substring (c_phone from 1 for 2) in ('13','31','23','29','30','18','17') and c_acctbal > ( select avg(c_acctbal) from hive.c_customer_parquet where c_acctbal > 0.00 and substring (c_phone from 1 for 2) in ('13','31','23','29','30','18','17') ) and not exists ( select * from hive.o_orders_parquet where o_custkey = c_custkey ) )[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m[1m                                      text                                      [m[1;32m | [m[1m                                      json                                      [m[1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
[1;32m| [m00-00    Screen
00-01      Project(cntrycode=[$0], numcust=[$1], totacctbal=[$2])
00-02        SelectionVectorRemover
00-03          Sort(sort0=[$0], dir0=[ASC])
00-04            HashAgg(group=[{0}], numcust=[COUNT()], totacctbal=[SUM($1)])
00-05              Project(cntrycode=[$0], c_acctbal=[$1])
00-06                HashToRandomExchange(dist0=[[$0]])
01-01                  UnorderedMuxExchange
02-01                    Project(cntrycode=[$0], c_acctbal=[$1], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
02-02                      Project(cntrycode=[SUBSTRING($1, 1, 2)], c_acctbal=[$2])
02-03                        SelectionVectorRemover
02-04                          Filter(condition=[IS NULL($4)])
02-05                            Project(c_custkey=[$2], c_phone=[$3], c_acctbal=[$4], o_custkey=[$0], $f1=[$1])
02-06                              HashJoin(condition=[=($2, $0)], joinType=[right], semi-join: =[false])
02-08                                Project(o_custkey=[$0], $f1=[true])
02-10                                  HashAgg(group=[{0}])
02-11                                    Project(o_custkey=[$0])
02-12                                      HashToRandomExchange(dist0=[[$0]])
03-01                                        UnorderedMuxExchange
05-01                                          Project(o_custkey=[$0], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
05-02                                            HashAgg(group=[{0}])
05-03                                              Project(o_custkey=[$0], i=[true])
05-04                                                SelectionVectorRemover
05-05                                                  Filter(condition=[IS NOT NULL($0)])
05-06                                                    Project(o_custkey=[$0])
05-07                                                      Scan(table=[[hive, o_orders_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000000_0], ReadEntryWithPath [path=/user/hive/warehouse/o_orders_parquet/000001_0]], numFiles=2, numRowGroups=2, columns=[`o_custkey`]]])
02-07                                Project(c_custkey=[$0], c_phone=[$1], c_acctbal=[$2])
02-09                                  HashToRandomExchange(dist0=[[$0]])
04-01                                    UnorderedMuxExchange
06-01                                      Project(c_custkey=[$0], c_phone=[$1], c_acctbal=[$2], E_X_P_R_H_A_S_H_F_I_E_L_D=[hash32AsDouble($0, 1301011)])
06-02                                        Project(c_custkey=[$0], c_phone=[$1], c_acctbal=[$2])
06-03                                          NestedLoopJoin(condition=[>($2, $3)], joinType=[inner])
06-05                                            SelectionVectorRemover
06-07                                              Filter(condition=[OR(=(SUBSTRING($1, 1, 2), '13'), =(SUBSTRING($1, 1, 2), '31'), =(SUBSTRING($1, 1, 2), '23'), =(SUBSTRING($1, 1, 2), '29'), =(SUBSTRING($1, 1, 2), '30'), =(SUBSTRING($1, 1, 2), '18'), =(SUBSTRING($1, 1, 2), '17'))])
06-09                                                Project(c_custkey=[$0], c_phone=[$1], c_acctbal=[$2])
06-11                                                  Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_custkey`, `c_phone`, `c_acctbal`]]])
06-04                                            Project(EXPR$0=[divide(CastHigh(CASE(=($1, 0), null, $0)), $1)])
06-06                                              StreamAgg(group=[{}], agg#0=[$SUM0($0)], agg#1=[COUNT($0)])
06-08                                                Project(c_acctbal=[$1])
06-10                                                  SelectionVectorRemover
06-12                                                    Filter(condition=[AND(>($1, 0.00), OR(=(SUBSTRING($0, 1, 2), '13'), =(SUBSTRING($0, 1, 2), '31'), =(SUBSTRING($0, 1, 2), '23'), =(SUBSTRING($0, 1, 2), '29'), =(SUBSTRING($0, 1, 2), '30'), =(SUBSTRING($0, 1, 2), '18'), =(SUBSTRING($0, 1, 2), '17')))])
06-13                                                      Project(c_phone=[$0], c_acctbal=[$1])
06-14                                                        Scan(table=[[hive, c_customer_parquet]], groupscan=[HiveDrillNativeParquetScan [entries=[ReadEntryWithPath [path=/user/hive/warehouse/c_customer_parquet/000000_0]], numFiles=1, numRowGroups=1, columns=[`c_phone`, `c_acctbal`]]])
[1;32m | [m{
  "head" : {
    "version" : 1,
    "generator" : {
      "type" : "ExplainHandler",
      "info" : ""
    },
    "type" : "APACHE_DRILL_PHYSICAL",
    "options" : [ ],
    "queue" : 0,
    "hasResourcePlan" : false,
    "resultMode" : "EXEC"
  },
  "graph" : [ {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393227,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`c_custkey`", "`c_phone`", "`c_acctbal`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/c_customer_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 393225,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    }, {
      "ref" : "`c_phone`",
      "expr" : "`c_phone`"
    }, {
      "ref" : "`c_acctbal`",
      "expr" : "`c_acctbal`"
    } ],
    "child" : 393227,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "filter",
    "@id" : 393223,
    "child" : 393225,
    "expr" : "booleanOr(equal(substring(`c_phone`, 1, 2) , '13') , equal(substring(`c_phone`, 1, 2) , '31') , equal(substring(`c_phone`, 1, 2) , '23') , equal(substring(`c_phone`, 1, 2) , '29') , equal(substring(`c_phone`, 1, 2) , '30') , equal(substring(`c_phone`, 1, 2) , '18') , equal(substring(`c_phone`, 1, 2) , '17') ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 112500.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 393221,
    "child" : 393223,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 112500.0
  }, {
    "pop" : "hive-drill-native-parquet-scan",
    "@id" : 393230,
    "userName" : "root",
    "hiveStoragePluginConfig" : {
      "type" : "hive",
      "configProps" : {
        "hive.metastore.uris" : "thrift://hive-metastore:9083",
        "hive.metastore.sasl.enabled" : "false",
        "fs.default.name" : "hdfs://namenode"
      },
      "enabled" : true
    },
    "columns" : [ "`c_phone`", "`c_acctbal`" ],
    "entries" : [ {
      "path" : "/user/hive/warehouse/c_customer_parquet/000000_0"
    } ],
    "hivePartitionHolder" : {
      "keyToIndexMapper" : { },
      "partitionValues" : [ ]
    },
    "confProperties" : { },
    "cost" : 450000.0
  }, {
    "pop" : "project",
    "@id" : 393229,
    "exprs" : [ {
      "ref" : "`c_phone`",
      "expr" : "`c_phone`"
    }, {
      "ref" : "`c_acctbal`",
      "expr" : "`c_acctbal`"
    } ],
    "child" : 393230,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 450000.0
  }, {
    "pop" : "filter",
    "@id" : 393228,
    "child" : 393229,
    "expr" : "booleanAnd(greater_than(`c_acctbal`, 0.00) , booleanOr(equal(substring(`c_phone`, 1, 2) , '13') , equal(substring(`c_phone`, 1, 2) , '31') , equal(substring(`c_phone`, 1, 2) , '23') , equal(substring(`c_phone`, 1, 2) , '29') , equal(substring(`c_phone`, 1, 2) , '30') , equal(substring(`c_phone`, 1, 2) , '18') , equal(substring(`c_phone`, 1, 2) , '17') ) ) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 56250.0
  }, {
    "pop" : "selection-vector-remover",
    "@id" : 393226,
    "child" : 393228,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 56250.0
  }, {
    "pop" : "project",
    "@id" : 393224,
    "exprs" : [ {
      "ref" : "`c_acctbal`",
      "expr" : "`c_acctbal`"
    } ],
    "child" : 393226,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 56250.0
  }, {
    "pop" : "streaming-aggregate",
    "@id" : 393222,
    "child" : 393224,
    "keys" : [ ],
    "exprs" : [ {
      "ref" : "`$f0`",
      "expr" : "$sum0(`c_acctbal`) "
    }, {
      "ref" : "`$f1`",
      "expr" : "count(`c_acctbal`) "
    } ],
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "project",
    "@id" : 393220,
    "exprs" : [ {
      "ref" : "`EXPR$0`",
      "expr" : "divide(casthigh( ( if (equal(`$f1`, 0)  ) then (NULL )  else (`$f0` )  end  ) ) , `$f1`) "
    } ],
    "child" : 393222,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 1.0
  }, {
    "pop" : "nested-loop-join",
    "@id" : 393219,
    "left" : 393221,
    "right" : 393220,
    "joinType" : "INNER",
    "condition" : "greater_than(`c_acctbal`, `EXPR$0`) ",
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "semiJoin" : false,
    "cost" : 112500.0
  }, {
    "pop" : "project",
    "@id" : 393218,
    "exprs" : [ {
      "ref" : "`c_custkey`",
      "expr" : "`c_custkey`"
    }, {
      "ref" : "`c_phone`",
      "expr" : "`c_phone`"
    }, {
      "ref" : "`c_acctbal`",
      "expr" : "`c_acctbal`"
    } ],
    "child" : 393219,
    "outputProj" : false,
    "initialAllocation" : 1000000,
    "maxAllocation" : 10000000000,
    "cost" : 112500.0
 [1;32m |[m
[1;32m+-[m[1;32m---------------------------------------------------------------------------------+---------------------------------------------------------------------------------[m[1;32m-+[m
1 row selected (0.741 seconds)
0: jdbc:drill:zk=zookeeper:2181> Closing: org.apache.drill.jdbc.impl.DrillConnectionImpl
13/04/2019 14:50:53.580
--------------------------------------Finished QUERY 22.--------------------------------

